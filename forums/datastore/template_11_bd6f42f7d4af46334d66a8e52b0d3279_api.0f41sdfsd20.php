<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_admin_api extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = 'ed3c64ff19a712915835e09395045125';\n\tfunction apiKey( $key ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<code>\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction apiKeyField( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n<div class=\"cApiKey\">\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction apiLogCredentials( $row, $apiKey, $client, $member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $row['api_key'] ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $apiKey ):\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-key\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i> \nCONTENT;\n$return .= htmlspecialchars( $apiKey->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-key\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i> <code>\nCONTENT;\n$return .= htmlspecialchars( $row['api_key'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelseif ( $row['access_token'] ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $row['member_id'] and $member ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->userPhoto( $member, 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $member->member_id ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->userLink( $member, 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'deleted_member', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$sprintf = array($client->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_log_member_client', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelseif ( $client ):\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-cubes\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i> \nCONTENT;\n$return .= htmlspecialchars( $client->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-cubes\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i> <code>\nCONTENT;\n$return .= htmlspecialchars( $row['access_token'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<em class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction apiPermissionDesc( $title, $description ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsType_left\">\n\t\nCONTENT;\n$return .= htmlspecialchars( $title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $description ):\n$return .= <<<CONTENT\n\n\t\t<br><span class=\"ipsType_light ipsType_small\">\nCONTENT;\n$return .= htmlspecialchars( $description, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction htaccess( $error, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t<p class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$sprintf = array((string)$url); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_instructions_error', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_instructions_intro', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<ol>\n\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_instructions_1', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t<li>\nCONTENT;\n\n$sprintf = array(\\IPS\\ROOT_PATH); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_instructions_2', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_instructions_3', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n<\/ol>\n<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=api&tab=apiLogs&recheck=1\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction oauthClientLink( $client ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<a \nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->hasAcpRestriction( 'core', 'api', 'oauth_manage' ) ):\n$return .= <<<CONTENT\nhref=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=oauth&do=view&client_id={$client->client_id}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $client->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction oauthScopeField( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsFieldRow_title\">\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_auth_scope_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n<div class=\"ipsFieldRow_content ipsClearfix\">\n\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[key]\" value=\"\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value['key'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><br>\n<\/div>\n<div class=\"ipsFieldRow_title\">\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_auth_scope_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n<div class=\"ipsFieldRow_content ipsClearfix\">\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_auth_scope_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<br>\n\t<textarea name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[desc]\" class=\"ipsField_fullWidth\" rows=\"5\">\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value['desc'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/textarea><br>\n\t<p class=\"ipsFieldRow_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_auth_scope_desc_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction oauthSecret( $client, $secret, $bruteForce ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $client->type == 'wordpress' ):\n$return .= <<<CONTENT\n\n\t<p class=\"ipsType_normal\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_app_settings', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class=\"ipsBox ipsSpacer_bottom\">\n\t\t<ul class=\"ipsDataList\">\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_application', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_application_val', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_app_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>\nCONTENT;\n$return .= htmlspecialchars( $client->client_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_secret', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $secret ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<code>\nCONTENT;\n$return .= htmlspecialchars( $secret, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code><br>\n\t\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_secret_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->hasAcpRestriction( 'core', 'applications', 'oauth_secrets' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=api&tab=oauth&do=view&client_id={$client->client_id}&newSecret=1\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_regenerate_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_regenerate_secret', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_scope', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>email<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_authorize_uri', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"oauth\/authorize\/\", \"interface\", \"\", array(), \\IPS\\Http\\Url::PROTOCOL_HTTPS ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_token_uri', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"oauth\/token\/\", \"interface\", \"\", array(), \\IPS\\Http\\Url::PROTOCOL_HTTPS ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_user_uri', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->use_friendly_urls and \\IPS\\Settings::i()->htaccess_mod_rewrite ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( rtrim( \\IPS\\Settings::i()->base_url, '\/' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/api\/core\/me<\/code>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( rtrim( \\IPS\\Settings::i()->base_url, '\/' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/api\/index.php?\/core\/me<\/code>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_attribute_mapping', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class=\"ipsBox ipsSpacer_bottom\">\n\t\t<ul class=\"ipsDataList\">\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_map_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>email<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_wordpress_map_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>name<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_credentials', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class=\"ipsBox ipsSpacer_bottom\">\n\t\t<ul class=\"ipsDataList\">\n\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t<code>\nCONTENT;\n$return .= htmlspecialchars( $client->client_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( $client->client_secret ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_secret', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<\/span>\n\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $secret ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<code>\nCONTENT;\n$return .= htmlspecialchars( $secret, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code><br>\n\t\t\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_client_secret_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->hasAcpRestriction( 'core', 'applications', 'oauth_secrets' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=api&tab=oauth&do=view&client_id={$client->client_id}&newSecret=1\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_regenerate_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_regenerate_secret', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t\nCONTENT;\n\nif ( $client->type != 'invision' ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsSpacer_bottom\">\n\t\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_endpoint_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t<div class=\"ipsBox\">\n\t\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\t\nCONTENT;\n\n$grants = explode( ',', $client->grant_types );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'authorization_code', $grants ) or \\in_array( 'token', $grants ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_authorize_uri', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"oauth\/authorize\/\", \"interface\", \"\", array(), \\IPS\\Http\\Url::PROTOCOL_HTTPS ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n<\/code><br>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'authorization_code', $grants ) and \\in_array( 'token', $grants ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<span class=\"ipsType_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_authorize_uri_desc_3', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\in_array( 'authorization_code', $grants ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<span class=\"ipsType_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_authorize_uri_desc_1', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<span class=\"ipsType_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_authorize_uri_desc_2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'authorization_code', $grants ) or \\in_array( 'client_credentials', $grants ) or \\in_array( 'password', $grants ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_token_uri', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t<code>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"oauth\/token\/\", \"interface\", \"\", array(), \\IPS\\Http\\Url::PROTOCOL_HTTPS ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n<\/code><br>\n\t\t\t\t\t\t\t\t<span class=\"ipsType_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_token_uri_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $bruteForce ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_brute_force', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_brute_force_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t{$bruteForce}\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction oauthStatus( $accessToken, $useRefreshTokens ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $accessToken['access_token_expires'] ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $accessToken['access_token_expires'] > time() ):\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $useRefreshTokens and $accessToken['refresh_token'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $accessToken['refresh_token_expires'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $accessToken['refresh_token_expires'] > time() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-refresh\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_refresh', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-times\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_expired', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-refresh\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_refresh', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<i class=\"fa fa-times\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_expired', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_status_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction permissionsField( $endpoints, $name, $value, $type=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsFieldRow ipsPad_half ipsClearfix'>\n\t<div class='ipsFieldRow_title'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_permissions_endpoint', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsFieldRow_content'>\n\t\t<p class='ipsType_reset ipsSpacer_bottom'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_permissions_endpoint_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"api\", \\IPS\\Request::i()->app )->permissionsFieldHtml( $endpoints, $name, $value, $type );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction permissionsFieldHtml( $endpoints, $name, $value, $type=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.admin.system.apiPermissions'>\n\t\nCONTENT;\n\nforeach ( $endpoints as $app => $sections ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsSpacer_bottom ipsSpacer_double'>\n\t\t\t<div class='ipsAreaBackground ipsPad cApiPermissions_header'>\n\t\t\t\t<h2 class='ipsType_reset ipsType_large'>\nCONTENT;\n\n$val = \"__app_{$app}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<span data-role=\"massToggle\" class=\"ipsJS_show\">\n\t\t\t\t\t<a href=\"#\" data-action=\"checkAll\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> \/  <a href=\"#\" data-action=\"checkNone\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\t<ul class='ipsList_reset cApiPermissions'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $sections as $sectionID => $sectionEndpoints ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='cApiPermissions_closed'>\n\t\t\t\t\t\t<h3 class='ipsType_reset ipsCursor_pointer' data-action='toggleSection'>\nCONTENT;\n\n$val = \"__api_{$app}_{$sectionID}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3> \n\t\t\t\t\t\t<span class='ipsType_light ipsType_small' data-role='endpointOverview'><\/span>\n\t\t\t\t\t\t<span data-role=\"massToggle\" class=\"ipsJS_show\">\n\t\t\t\t\t\t\t<a href=\"#\" data-action=\"checkAll\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> \/  <a href=\"#\" data-action=\"checkNone\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $sectionEndpoints as $endpointKey => $endpoint ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $endpointKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][access]\" value=\"1\" \nCONTENT;\n\nif ( isset( $value[ $endpointKey ]['access'] ) and $value[ $endpointKey ]['access'] ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\t<span><\/span>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<label>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_permissions_access', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $endpointKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][log]\" value=\"1\" \nCONTENT;\n\nif ( isset( $value[ $endpointKey ]['log'] ) and $value[ $endpointKey ]['log'] ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\t<span><\/span>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<label>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_permissions_log', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t<li><strong><code>\nCONTENT;\n\n$return .= \\IPS\\Api\\Controller::parseEndpointForDisplay( $endpoint['title'] );\n$return .= <<<CONTENT\n<\/code><\/strong><\/li>\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction referenceEndpoint( $data, $params, $exceptions, $response, $additionalClasses ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"cApi\">\n\t<div class='ipsBox ipsPad'>\n\t\t<h2 class=\"ipsType_sectionHead\"><code>\nCONTENT;\n\n$return .= \\IPS\\Api\\Controller::parseEndpointForDisplay( $data['title'], 'large', TRUE );\n$return .= <<<CONTENT\n<\/code><\/h2>\n\t\t<hr class='ipsHr'>\n\t\t<p class=\"ipsType_normal\">\nCONTENT;\n\n$return .= htmlspecialchars( nl2br( $data['description'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nif ( isset( $data['details']['apimemberonly']) ):\n$return .= <<<CONTENT\n\n\t\t\t<p class=\"ipsMessage ipsMessage_warning\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_endpoint_member_only', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $data['details']['apiclientonly']) ):\n$return .= <<<CONTENT\n\n\t\t\t<p class=\"ipsMessage ipsMessage_warning\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_endpoint_client_only', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $data['details']['note']) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $data['details']['note'] as $note ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class=\"ipsMessage ipsMessage_info\">\nCONTENT;\n$return .= htmlspecialchars( $note[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr'>\n\t\t\n\t\t<h3 class=\"ipsType_sectionHead \nCONTENT;\n\nif ( $params ):\n$return .= <<<CONTENT\nipsSpacer_bottom ipsSpacer_half\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_parameters', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\nCONTENT;\n\nif ( $params ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"api\", \\IPS\\Request::i()->app )->referenceTable( $params );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsType_normal ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_parameters_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t<hr class='ipsHr'>\n\n\t\t<h3 class=\"ipsType_sectionHead  \nCONTENT;\n\nif ( $exceptions ):\n$return .= <<<CONTENT\nipsSpacer_bottom ipsSpacer_half\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_exceptions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\nCONTENT;\n\nif ( $exceptions ):\n$return .= <<<CONTENT\n\n\t\t\t<table class=\"ipsTable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_exception_code', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_exception_message', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_exception_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t<\/tr>\n\t\t\t\t\nCONTENT;\n\nforeach ( $exceptions as $exception ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><code>\nCONTENT;\n$return .= htmlspecialchars( $exception[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code><\/td>\n\t\t\t\t\t\t<td><code>\nCONTENT;\n$return .= htmlspecialchars( $exception[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code><\/td>\n\t\t\t\t\t\t<td>\nCONTENT;\n$return .= htmlspecialchars( $exception[2], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/table>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsType_normal ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_exceptions_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t<hr class='ipsHr'>\n\n\t\t<h3 class=\"ipsType_sectionHead \nCONTENT;\n\nif ( $response ):\n$return .= <<<CONTENT\nipsSpacer_bottom ipsSpacer_half\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_response', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\nCONTENT;\n\nif ( $response ):\n$return .= <<<CONTENT\n\n\t\t\t{$response}\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsType_normal ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_response_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t<hr class='ipsHr'>\n\n\t\t\nCONTENT;\n\nforeach ( $additionalClasses as $class => $data ):\n$return .= <<<CONTENT\n\n\t\t\t<a id=\"object-\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/a>\n\t\t\t<h3 class=\"ipsType_sectionHead ipsSpacer_bottom ipsSpacer_half ipsType_blendLinks\"><code>\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_object', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t{$data}\n\t\t\t<hr class='ipsHr'>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction referenceTable( $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<table class=\"ipsTable\">\n\t<tr>\n\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_param_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_param_type', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_param_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t<\/tr>\n\t\nCONTENT;\n\nforeach ( $rows as $column ):\n$return .= <<<CONTENT\n\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $column[4] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $column[4] === 'required' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_neutral\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $column[4] === 'client' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class=\"fa fa-key\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_response_client', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $column[4] === 'member' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class=\"fa fa-user\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_response_member', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<code>\nCONTENT;\n$return .= htmlspecialchars( $column[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\t\t<\/td>\n\t\t\t<td>\n\t\t\t\t\nCONTENT;\n\nif ( mb_strpos( $column[0], '|' ) !== FALSE OR \\in_array( $column[0], array( 'array', 'int', 'string', 'float', 'datetime', 'bool', 'object' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $column[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( mb_substr( $column[0], 0, 1 ) == '[' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( mb_substr( $column[0], 1, -1 ), array( 'int', 'string', 'float', 'datetime', 'bool', 'object' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(mb_substr( $column[0], 1, -1 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_array_of_scalar', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_array_of', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href=\"#object-\nCONTENT;\n\n$return .= htmlspecialchars( mb_strtolower( mb_substr( $column[0], mb_strrpos( $column[0], '\\\\' ) + 1, -1 ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= htmlspecialchars( mb_strtolower( mb_substr( $column[0], mb_strrpos( $column[0], '\\\\' ) + 1, -1 ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_array_objects', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href=\"#object-\nCONTENT;\n\n$return .= htmlspecialchars( mb_strtolower( mb_substr( $column[0], mb_strrpos( $column[0], '\\\\' ) + 1 ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= htmlspecialchars( mb_strtolower( mb_substr( $column[0], mb_strrpos( $column[0], '\\\\' ) + 1 ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_object', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/td>\n\t\t\t<td class='ipsTable_wrap'>\nCONTENT;\n\n$val = \"{$column[2]}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/td>\n\t\t<\/tr>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/table>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction referenceTemplate( $endPoints, $tree, $selected, $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsAreaBackground_light ipsPad\">\n\t\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isSecure() ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsMessage ipsMessage_warning\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_https_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsColumns ipsColumns_collapsePhone cApiReference\" data-controller='core.admin.system.api'>\n\t\t<div class=\"ipsColumn ipsColumn_veryWide\">\n\t\t\t<h2 class='ipsBox_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_endpoints', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t<div class='ipsBox'>\n\t\t\t\t<div class=\"ipsPad_half ipsScrollbar\">\n\t\t\t\t\t<ul class=\"cApiTree ipsList_reset ipsSpacer_both ipsSpacer_half\">\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $tree as $app => $controllers ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='cApiTree_activeBranch'>\n\t\t\t\t\t\t\t\t<a href='#' data-action='toggleBranch'>\nCONTENT;\n\n$val = \"__app_{$app}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $controllers as $controller => $endpoints ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $endpoints ) > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cApiTree_inactiveBranch'>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-action='toggleBranch'>\nCONTENT;\n\n$val = \"__api_{$app}_{$controller}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $endpoints as $key => $endpoint ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=api&tab=apiReference&endpoint={$key}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-action='showEndpoint'><code>\nCONTENT;\n\n$return .= \\IPS\\Api\\Controller::parseEndpointForDisplay( $endpoint['title'] );\n$return .= <<<CONTENT\n<\/code><\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $endpoints as $key => $endpoint ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=api&tab=apiReference&endpoint={$key}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-action='showEndpoint'><code>\nCONTENT;\n\n$return .= \\IPS\\Api\\Controller::parseEndpointForDisplay( $endpoint['title'] );\n$return .= <<<CONTENT\n<\/code><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"ipsColumn ipsColumn_fluid\" data-role=\"referenceContainer\">\n\t\t\t\nCONTENT;\n\nif ( $content ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$content}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction viewLog( $request, $response ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad\">\n\t<h2 class=\"ipsType_minorHeading\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_request_data', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<pre>\nCONTENT;\n$return .= htmlspecialchars( $request, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/pre>\n\t<h2 class=\"ipsType_minorHeading\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'api_response', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<pre>\nCONTENT;\n$return .= htmlspecialchars( $response, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/pre>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
