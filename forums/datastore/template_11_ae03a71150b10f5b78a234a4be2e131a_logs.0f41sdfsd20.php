<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_form_front_logs extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = 'ed3c64ff19a712915835e09395045125';\n\tfunction confirmationPage( $message=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('form_message_sent') );\n$return .= <<<CONTENT\n\n\n<div class='ipsBox ipsPad'>\n<div class='ipsType_normal ipsType_richText'>\n    \nCONTENT;\n\nif ( $message ):\n$return .= <<<CONTENT\n\n        {$message}\n    \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'message_sent_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction create( $container, $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->application->directory === 'form' ):\n$return .= <<<CONTENT\n\n    <ul class=\"ipsToolList ipsToolList_horizontal ipsResponsive_hidePhone ipsClearfix\">\n        \nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_fs_view_logs'] ):\n$return .= <<<CONTENT\n\n            <li class='ipsToolList_primaryAction'>\n                <a class=\"ipsButton ipsButton_medium ipsButton_important ipsButton_fullWidth\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=form&controller=logs\", null, \"form_logs\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_logs', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                <\/a>\n            <\/li>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        \nCONTENT;\n\nif ( !\\IPS\\Settings::i()->fm_require_form ):\n$return .= <<<CONTENT\n\n            <li class='ipsToolList_primaryAction'>\n                <a class=\"ipsButton ipsButton_medium ipsButton_important ipsButton_fullWidth\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=form&do=formlist\", null, \"form_list\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'show_forms', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                <\/a>\n            <\/li>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n    <\/ul>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->application->directory === 'form' ):\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( $container->_title );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $container->formTranslate( 'rules' ) ):\n$return .= <<<CONTENT\n\n    <div class='ipsMessage ipsMessage_\nCONTENT;\n\nif ( isset( $container->_options->rules_color ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( $container->_options->rules_color, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ninfo\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n    \t{$container->formTranslate( 'rules', TRUE )}\n    <\/div> \n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<div class='ipsBox ipsPad'>\n    <div class='ipsType_normal ipsType_richText'>\n        {$form}\n    <\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction customTemplate( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( md5( uniqid() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t<div class='ipsBox'>\n        <h2 class='ipsType_sectionTitle ipsType_reset'>Test three columns<\/h2>\n\t\t<ul class='ipsForm ipsPad'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $field ):\n$return .= <<<CONTENT\n    \n         \t\t<div class='ipsGrid ipsGrid_collapsePhone'>              \n    \t\t\t\t<div class='ipsGrid_span3'>     \t\t\t\t\t\n  \t\t\t\t\t\t{$field['form_field_1']}        \t\t\t\t\t\n    \t\t\t\t<\/div>\n    \t\t\t\t<div class='ipsGrid_span3'>       \t\t\t\t\t\n   \t\t\t\t\t\t{$field['form_field_2']}        \t\t\t\t\t\n    \t\t\t\t<\/div>\t\n    \t\t\t\t<div class='ipsGrid_span3'>       \t\t\t\t\t\n   \t\t\t\t\t\t{$field['form_field_3']}        \t\t\t\t\t\n    \t\t\t\t<\/div>                    \n               <\/div>             \n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n        <br>\n        <h2 class='ipsType_sectionTitle ipsType_reset'>Show rest of fields<\/h2>\n\t\t<ul class='ipsForm ipsPad ipsForm_vertical'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n            \n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $inputName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !\\in_array( $inputName, array( 'form_field_1', 'form_field_2', 'form_field_3' ) )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n        <br>         \n        \n\t\t<div class='ipsAreaBackground ipsPad ipsType_center'>\n\t\t\t<button type='submit' class='ipsButton ipsButton_large ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'submit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t<\/div>\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction logEntry( $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('form_logs') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n<div class='ipsPad'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<div class=\"ipsDataItem\">\n\t<div class='ipsDataItem_generic ipsDataItem_size3 ipsPos_top ipsType_center'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $log->author ), 'small' );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsDataItem_main'>\n\t\t<div class='ipsDataItem_meta ipsType_light'>\n\t\t\t<ul class='ipsList_inline ipsSpacer_bottom'>\n\t\t\t\t<li>\n                    <i class='fa fa-user'><\/i>\n                    <strong> \nCONTENT;\n\nif ( $log->member_id ):\n$return .= <<<CONTENT\n{$log->author()->link()}\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $log->member_name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n (\nCONTENT;\n$return .= htmlspecialchars( $log->ip_address, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/strong>\n\t\t\t\t<\/li>\n                \nCONTENT;\n\nif ( $log->form_id ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n                        <i class='fa fa-folder'><\/i>\n                        <strong> \nCONTENT;\n$return .= htmlspecialchars( $log->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<\/li>\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<i class='fa fa-clock-o'><\/i>\n                    \nCONTENT;\n\n$val = ( $log->date instanceof \\IPS\\DateTime ) ? $log->date : \\IPS\\DateTime::ts( $log->date );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n        <hr class='ipsHr'> \n\t\t<div class='ipsType_normal ipsType_richText ipsSpacer_top ipsSpacer_half'>\n\t\t\t{$log->message}\n\t\t<\/div>\n          \n        \nCONTENT;\n\nif ( $log->canDelete() ):\n$return .= <<<CONTENT\n\n            <hr class='ipsHr'>   \n            <ul class=\"ipsComment_controls ipsClearfix \">\t\t\t\t\t\n                <li><a href='\nCONTENT;\n$return .= htmlspecialchars( $log->url('delete')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'log_delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class=\"ipsButton ipsButton_verySmall ipsButton_negative\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'log_delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/a><\/li>\n    \t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $log->url('reply')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reply_log_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $log->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsButton ipsButton_verySmall ipsButton_normal\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_reply', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n    \t\t<\/ul> \n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n     \n\t<\/div>\n<\/div>\n\n\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction logList( $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('module__forms_logs') );\n$return .= <<<CONTENT\n\n\n{$table}\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction logRow( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem ipsDataItem_unread \nCONTENT;\n\nif ( $row->hidden() ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t<div class='ipsDataItem_generic ipsDataItem_size3 ipsPos_top ipsType_center'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $row->author ), 'small' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<div class='ipsDataItem_meta ipsType_light'>\n\t\t\t\t<ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t\t<li>\n                        <i class='fa fa-user'><\/i>\n                        <strong> \nCONTENT;\n\nif ( $row->member_id ):\n$return .= <<<CONTENT\n{$row->author()->link()}\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->member_name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n <\/strong>\n\t\t\t\t\t<\/li>\n                    \nCONTENT;\n\nif ( $row->form_id ):\n$return .= <<<CONTENT\n\n    \t\t\t\t\t<li>\n                            <i class='fa fa-folder'><\/i>\n                            <strong> \nCONTENT;\n$return .= htmlspecialchars( $row->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n    \t\t\t\t\t<\/li>\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i class='fa fa-clock-o'><\/i>\n                        \nCONTENT;\n\n$val = ( $row->date instanceof \\IPS\\DateTime ) ? $row->date : \\IPS\\DateTime::ts( $row->date );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\t<div class='ipsType_break ipsContained ipsType_medium ipsSpacer_top ipsSpacer_half' \nCONTENT;\n\nif ( \\IPS\\Settings::i()->fm_log_preview ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-size='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->fm_log_preview;\n$return .= <<<CONTENT\n lines' data-ipsTruncate-type='remove'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url('view')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_log_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>{$row->message}<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $row->canDelete() || $row->canHide() || $row->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_modCheck ipsType_noBreak ipsPos_center'>\n\t\t\t\t<a href='#elLog\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elLog\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_large ipsPos_middle ipsType_blendLinks' data-ipsMenu>\n\t\t\t\t\t<i class='fa fa-cog'><\/i> <i class='fa fa-caret-down'><\/i>\n\t\t\t\t<\/a>\n\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n$return .= htmlspecialchars( $row->tableStates(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\n\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsMenu_withStem ipsHide' id='elLog\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n \t\t\t\t\t<li class='ipsMenu_item'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url('reply')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_reply', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<span data-role=\"ipsMenu_selectedText\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_reply', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n                    \nCONTENT;\n\nif ( !$row->canHide() ):\n$return .= <<<CONTENT\n\n                        <li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'hide' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nif ( $row->canUnhide() ):\n$return .= <<<CONTENT\n\n                        <li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'unhide' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\nif ( $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nif ( $row->canDelete() ):\n$return .= <<<CONTENT\n\n                        <li class='ipsMenu_sep'><\/li>\n                        <li class='ipsMenu_item'>\n                            <a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url('delete')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'log_delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n                                \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'log_delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                            <\/a>\n                        <\/li>\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction logTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsBox'>\n    <h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'module__forms_logs', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\n    <div data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table(log.export)\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n,core.front.core.moderation\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $table->dummyLoading ):\n$return .= <<<CONTENT\ndata-dummyLoading\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $table->getPaginationKey() != 'page' ):\n$return .= <<<CONTENT\ndata-pageParam='\nCONTENT;\n$return .= htmlspecialchars( $table->getPaginationKey(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n        \nCONTENT;\n\nif ( $table->title ):\n$return .= <<<CONTENT\n\n            <h2 class='ipsType_sectionTitle ipsType_reset ipsClear'>\nCONTENT;\n\n$val = \"{$table->title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        \nCONTENT;\n\nif ( ( $table->canModerate() AND $table->showFilters ) OR ( $table->showAdvancedSearch AND ( ( isset( $table->sortOptions ) and \\count( $table->sortOptions ) > 1 ) OR $table->advancedSearch ) ) OR ( !empty( $table->filters ) ) OR ( $table->pages > 1 ) ):\n$return .= <<<CONTENT\n\n\n        <div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n            \nCONTENT;\n\nif ( $table->canModerate() AND $table->showFilters ):\n$return .= <<<CONTENT\n\n                <ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n                    <li>\n                        <a class=\"ipsJS_show\" href=\"#elCheck_menu\" id=\"elCheck_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title='\nCONTENT;\n\n$val = \"{$table->langPrefix}select_rows_tooltip\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip data-ipsAutoCheck data-ipsAutoCheck-context=\"#elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\">\n                            <span class=\"cAutoCheckIcon ipsType_medium\"><i class=\"fa fa-square-o\"><\/i><\/span> <i class=\"fa fa-caret-down\"><\/i>\n                            <span class='ipsNotificationCount' data-role='autoCheckCount'>0<\/span>\n                        <\/a>\n                        <ul class=\"ipsMenu ipsMenu_auto ipsMenu_withStem ipsHide\" id=\"elCheck_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu\">\n                            <li class=\"ipsMenu_title\">\nCONTENT;\n\n$val = \"{$table->langPrefix}select_rows\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n                            <li class=\"ipsMenu_item\" data-ipsMenuValue=\"all\"><a href=\"#\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                            <li class=\"ipsMenu_item\" data-ipsMenuValue=\"none\"><a href=\"#\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                            \nCONTENT;\n\nif ( \\count($table->getFilters()) ):\n$return .= <<<CONTENT\n\n                                <li class=\"ipsMenu_sep\"><hr><\/li>\n                                \nCONTENT;\n\nforeach ( $table->getFilters() as $filter ):\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( $filter ):\n$return .= <<<CONTENT\n\n                                        <li class=\"ipsMenu_item\" data-ipsMenuValue=\"\nCONTENT;\n$return .= htmlspecialchars( $filter, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><a href=\"#\">\nCONTENT;\n\n$val = \"{$filter}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                                    \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n                                        <li class=\"ipsMenu_sep\"><hr><\/li>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <\/ul>\n                    <\/li>\n                <\/ul>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n            <ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n                \nCONTENT;\n\nif ( $table->showAdvancedSearch AND ( ( isset( $table->sortOptions ) and \\count( $table->sortOptions ) > 1 ) OR $table->advancedSearch ) ):\n$return .= <<<CONTENT\n\n\n                    <li>\n                        \nCONTENT;\n\nif ( isset($table->sortOptions)  ):\n$return .= <<<CONTENT\n\n                        <a href=\"#elSortByMenu_menu\" id=\"elSortByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"sortButton\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_by', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n                        <ul class=\"ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide\" id=\"elSortByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu\">\n                                \nCONTENT;\n\n$custom = TRUE;\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nforeach ( $table->sortOptions as $k => $col ):\n$return .= <<<CONTENT\n\n                                    <li class=\"ipsMenu_item \nCONTENT;\n\nif ( $col === $table->getSortByColumn() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$custom = FALSE;\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-ipsMenuValue=\"\nCONTENT;\n$return .= htmlspecialchars( $col, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-sortDirection='\nCONTENT;\n$return .= htmlspecialchars( $table->getSortDirection( $k ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'filter' => $table->filter, 'sortby' => $col, 'sortdirection' => $table->getSortDirection( $k ), 'page' => '1' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$val = \"{$table->langPrefix}sort_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                                \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->advancedSearch ):\n$return .= <<<CONTENT\n\n                                <li class=\"ipsMenu_item \nCONTENT;\n\nif ( $custom ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-noSelect=\"true\">\n                                    <a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'advancedSearchForm' => '1', 'filter' => $table->filter, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom_sort', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n                                <\/li>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <\/ul>\n                        \nCONTENT;\n\nelseif ( $table->advancedSearch ):\n$return .= <<<CONTENT\n\n                            <a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'advancedSearchForm' => '1', 'filter' => $table->filter, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom_sort', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n                        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                    <\/li>\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nif ( !empty( $table->filters ) ):\n$return .= <<<CONTENT\n\n                    <li>\n                        <a href=\"#elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu\" data-role=\"tableFilterMenu\" id=\"elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'filter_by', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n                        <ul class='ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide' id='elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n                            <li data-action=\"tableFilter\" data-ipsMenuValue='' class='ipsMenu_item \nCONTENT;\n\nif ( !$table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n                                <a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'filter' => '', 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'page' => '1' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$table->langPrefix}all\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n                            <\/li>\n                            \nCONTENT;\n\nforeach ( $table->filters as $k => $q ):\n$return .= <<<CONTENT\n\n                                <li data-action=\"tableFilter\" data-ipsMenuValue='\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsMenu_item \nCONTENT;\n\nif ( $k === $table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n                                    <a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'filter' => $k, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'page' => '1' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$table->langPrefix}{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n                                <\/li>\n                            \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                        <\/ul>\n                    <\/li>\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            <\/ul>\n\n            <a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'export' => 1, 'filter' => $table->filter, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary ipsButton_verySmall \" data-role=\"exportLogsUrl\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_export_logs', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\n            \nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n                <div data-role=\"tablePagination\">\n                    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        <\/div>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n        \nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n            <form action=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-role='moderationTools' data-ipsPageAction>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            \nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n\n                <ol class='ipsDataList ipsClear \nCONTENT;\n\nforeach ( $table->classes as $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\">\n                    \nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n                <\/ol>\n            \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n                <div class='ipsType_center ipsPad'>\n                    <p class='ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rows_in_table', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n                    \nCONTENT;\n\nif ( method_exists( $table, 'container' ) AND $table->container() !== NULL ):\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nif ( $table->container()->can('add') ):\n$return .= <<<CONTENT\n\n                            <a href='\nCONTENT;\n$return .= htmlspecialchars( $table->container()->url()->setQueryString( 'do', 'add' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary ipsButton_medium'>\n                                \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'submit_first_row', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                            <\/a>\n                        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n        \nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n                <div class=\"ipsAreaBackground ipsPad ipsClearfix ipsJS_hide\" data-role=\"pageActionOptions\">\n                    <div class=\"ipsPos_right\">\n                        <select name=\"modaction\" data-role=\"moderationAction\">\n                            \nCONTENT;\n\nif ( $table->canModerate('unhide') ):\n$return .= <<<CONTENT\n\n                                <option value='approve' data-icon='check-circle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('feature') or $table->canModerate('unfeature') ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='star' data-action='feature'>\n                                    \nCONTENT;\n\nif ( $table->canModerate('feature') ):\n$return .= <<<CONTENT\n\n                                        <option value='feature'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( $table->canModerate('unhide') ):\n$return .= <<<CONTENT\n\n                                        <option value='unfeature'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfeature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                <\/optgroup>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('pin') or $table->canModerate('unpin') ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='thumb-tack' data-action='pin'>\n                                    \nCONTENT;\n\nif ( $table->canModerate('pin') ):\n$return .= <<<CONTENT\n\n                                        <option value='pin'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( $table->canModerate('unpin') ):\n$return .= <<<CONTENT\n\n                                        <option value='unpin'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unpin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                <\/optgroup>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('hide') or $table->canModerate('unhide') ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='eye' data-action='hide'>\n                                    \nCONTENT;\n\nif ( $table->canModerate('hide') ):\n$return .= <<<CONTENT\n\n                                        <option value='hide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( $table->canModerate('unhide') ):\n$return .= <<<CONTENT\n\n                                        <option value='unhide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                <\/optgroup>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('lock') or $table->canModerate('unlock') ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='lock' data-action='lock'>\n                                    \nCONTENT;\n\nif ( $table->canModerate('lock') ):\n$return .= <<<CONTENT\n\n                                        <option value='lock'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( $table->canModerate('unlock') ):\n$return .= <<<CONTENT\n\n                                        <option value='unlock'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlock', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                <\/optgroup>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('move') ):\n$return .= <<<CONTENT\n\n                                <option value='move' data-icon='arrow-right'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('split_merge') ):\n$return .= <<<CONTENT\n\n                                <option value='merge' data-icon='level-up'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'merge', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( method_exists( $table, 'customActions' ) ):\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nforeach ( $table->customActions() as $action ):\n$return .= <<<CONTENT\n\n                                    \nCONTENT;\n\nif ( \\is_array( $action['action'] )  ):\n$return .= <<<CONTENT\n\n                                        <optgroup label=\"\nCONTENT;\n\n$val = \"{$action['grouplabel']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='\nCONTENT;\n$return .= htmlspecialchars( $action['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='\nCONTENT;\n$return .= htmlspecialchars( $action['groupaction'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n                                            \nCONTENT;\n\nforeach ( $action['action'] as $_action ):\n$return .= <<<CONTENT\n\n                                                <option value='\nCONTENT;\n$return .= htmlspecialchars( $_action['action'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$_action['label']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                            \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                                        <\/optgroup>\n                                    \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n                                        <option value='\nCONTENT;\n$return .= htmlspecialchars( $action['action'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-icon='\nCONTENT;\n$return .= htmlspecialchars( $action['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$action['label']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->savedActions ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'saved_actions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='tasks' data-action='saved_actions'>\n                                    \nCONTENT;\n\nforeach ( $table->savedActions as $k => $v ):\n$return .= <<<CONTENT\n\n                                        <option value='savedAction-\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n                                    \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                                <\/optgroup>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table instanceof \\IPS\\core\\Followed\\Table ):\n$return .= <<<CONTENT\n\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'adjust_follow', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='bell' data-action='adjust_follow'>\n                                    <option value='follow_immediate'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_type_immediate_prefixed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    <option value='follow_daily'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_type_daily_prefixed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    <option value='follow_weekly'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_type_weekly_prefixed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    <option value='follow_none'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_type_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                <\/optgroup>\n                                <optgroup label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'adjust_follow_privacy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-icon='ban' data-action='adjust_follow_privacy'>\n                                    <option value='follow_public'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_public', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                    <option value='follow_anonymous'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_anonymous', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                                <\/optgroup>\n                                <option value='unfollow' data-icon='times'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfollow', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( $table->canModerate('delete') ):\n$return .= <<<CONTENT\n\n                                <option value='delete' data-icon='trash'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <\/select>\n                        <button type=\"submit\" class=\"ipsButton ipsButton_alternate ipsButton_verySmall\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'submit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n                    <\/div>\n                <\/div>\n            <\/form>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        \nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n        <div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n            <div data-role=\"tablePagination\">\n                \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n            <\/div>\n        <\/div>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n    <\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction replyForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form \nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax()  ):\n$return .= <<<CONTENT\ndata-controller='form.front.logs.replyForm'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm >\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( md5( uniqid() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsPad\">\n\t\t<ul class='ipsList_reset'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\is_string( $input ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input}\n\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Radio ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsFieldRow\">\n\t\t\t\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_send_me', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsPad\">\n\t\t{$actionButtons[0]} \nCONTENT;\n\nif ( isset( $actionButtons[1] ) ):\n$return .= <<<CONTENT\n{$actionButtons[1]}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
