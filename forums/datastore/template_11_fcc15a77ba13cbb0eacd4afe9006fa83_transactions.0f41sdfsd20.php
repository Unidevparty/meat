<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_nexus_admin_transactions extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = 'ed3c64ff19a712915835e09395045125';\n\tfunction braintreeData( $response=NULL, $error=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $response->riskData ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_top ipsSpacer_bottom\">\n\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t<i class=\"fa fa-shield\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_risk_level', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response->riskData->decision, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $response->paymentInstrumentType ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_bottom\">\n\t\t\nCONTENT;\n\nif ( $response->paymentInstrumentType === 'paypal_account' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t<i class=\"fa fa-paypal\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_type_paypal', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $response->paypalDetails->payerEmail, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <span class=\"ipsType_small\">(\nCONTENT;\n$return .= htmlspecialchars( $response->paypalDetails->payerFirstName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response->paypalDetails->payerLastName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nif ( $response->paypalDetails->payerStatus ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array( $response->paypalDetails->payerStatus); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'paypal_payer_status', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $response->paypalDetails->sellerProtectionStatus ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array( $response->paypalDetails->sellerProtectionStatus); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'paypal_seller_protection_status', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( $response->paymentInstrumentType === 'venmo_account' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $response->venmoAccount['sourceDescription'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nelseif ( $response->paymentInstrumentType === 'credit_card' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\nCONTENT;\n\nif ( $response->creditCardDetails->cardType == 'Visa' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-visa\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_visa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->creditCardDetails->cardType == 'MasterCard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-mastercard\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_mastercard', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->creditCardDetails->cardType == 'Discover' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-discover\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_discover', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->creditCardDetails->cardType == 'American Express' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-amex\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_american_express', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->creditCardDetails->cardType == 'JCB' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-jcb\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_jcb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-credit-card\"><\/i>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t&middot;&middot;&middot;&middot;\nCONTENT;\n$return .= htmlspecialchars( $response->creditCardDetails->last4, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\n\t\t\t\t<span class=\"ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expires', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response->creditCardDetails->expirationDate, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $response->creditCardDetails->cardholderName ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_holder_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response->creditCardDetails->cardholderName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $response->creditCardDetails->countryOfIssuance and $response->creditCardDetails->countryOfIssuance !== 'Unknown' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_origin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"country-{$response->creditCardDetails->countryOfIssuance}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nforeach ( array( 'cvvResponseCode', 'avsStreetAddressResponseCode', 'avsPostalCodeResponseCode' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $response->$k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $response->$k === 'M' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $response->$k === 'N' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_issue\"><i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$val = \"braintree_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"braintree_avscvv_{$response->$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\t\t\nCONTENT;\n\nif ( $response->threeDSecureInfo ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $response->threeDSecureInfo->liabilityShifted ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_3ds_pass', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->threeDSecureInfo->liabilityShiftPossible ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_3ds_fail', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_3ds_not_checked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;<span class=\"ipsType_small ipsType_light\">(\nCONTENT;\n\n$val = \"braintree_3ds_{$response->threeDSecureInfo->status}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_3ds_not_checked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( $response->paymentInstrumentType === 'apple_pay_card' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t<i class=\"fa fa-apple\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_tokenization_apple_pay', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\nCONTENT;\n\nif ( str_replace( 'Apple Pay - ', '', $response->applePayCardDetails->cardType ) == 'Visa' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-visa\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_visa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( str_replace( 'Apple Pay - ', '', $response->applePayCardDetails->cardType ) == 'MasterCard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-mastercard\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_mastercard', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( str_replace( 'Apple Pay - ', '', $response->applePayCardDetails->cardType ) == 'Discover' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-discover\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_discover', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( str_replace( 'Apple Pay - ', '', $response->applePayCardDetails->cardType ) == 'American Express' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-amex\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_american_express', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( str_replace( 'Apple Pay - ', '', $response->applePayCardDetails->cardType ) == 'JCB' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-jcb\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_jcb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-credit-card\"><\/i>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t&middot;&middot;&middot;&middot;\nCONTENT;\n$return .= htmlspecialchars( $response->applePayCardDetails->last4, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\n\t\t\t\t<span class=\"ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expires', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= htmlspecialchars( str_pad( $response->applePayCardDetails->expirationMonth, 2, '0', STR_PAD_LEFT ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/\nCONTENT;\n$return .= htmlspecialchars( $response->applePayCardDetails->expirationYear, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $response->applePayCardDetails->cardholderName ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_holder_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response->applePayCardDetails->cardholderName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $response->applePayCardDetails->countryOfIssuance and $response->applePayCardDetails->countryOfIssuance !== 'Unknown' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_origin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"country-{$response->applePayCardDetails->countryOfIssuance}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nforeach ( array( 'avsStreetAddressResponseCode', 'avsPostalCodeResponseCode' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $response->$k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $response->$k === 'M' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $response->$k === 'N' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_issue\"><i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$val = \"braintree_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"braintree_avscvv_{$response->$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( $response->paymentInstrumentType === 'android_pay_card' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t<i class=\"fa fa-google\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_tokenization_android_pay', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\nCONTENT;\n\nif ( $response->androidPayCardDetails->cardType == 'Visa' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-visa\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_visa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->androidPayCardDetails->cardType == 'MasterCard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-mastercard\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_mastercard', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->androidPayCardDetails->cardType == 'Discover' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-discover\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_discover', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->androidPayCardDetails->cardType == 'American Express' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-amex\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_american_express', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response->androidPayCardDetails->cardType == 'JCB' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-cc-jcb\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_jcb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-credit-card\"><\/i>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t&middot;&middot;&middot;&middot;\nCONTENT;\n$return .= htmlspecialchars( $response->androidPayCardDetails->last4, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\n\t\t\t\t<span class=\"ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expires', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= htmlspecialchars( str_pad( $response->androidPayCardDetails->expirationMonth, 2, '0', STR_PAD_LEFT ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/\nCONTENT;\n$return .= htmlspecialchars( $response->androidPayCardDetails->expirationYear, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $response->androidPayCardDetails->countryOfIssuance and $response->androidPayCardDetails->countryOfIssuance !== 'Unknown' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_origin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"country-{$response->applePayCardDetails->countryOfIssuance}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nforeach ( array( 'avsStreetAddressResponseCode', 'avsPostalCodeResponseCode' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $response->$k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $response->$k === 'M' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $response->$k === 'N' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsType_issue\"><i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$val = \"braintree_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"braintree_avscvv_{$response->$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t<p class='ipsMessage ipsMessage_error'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_details_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction braintreeDispute( $transaction, $log, $response=NULL, $error=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_intermediate'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\nCONTENT;\n\nif ( isset( $response->kind ) and $response->kind == \\Braintree\\Dispute::RETRIEVAL ):\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-exclamation-triangle'><\/i>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-undo'><\/i>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\nCONTENT;\n\nif ( isset( $response->kind ) and $response->kind == \\Braintree\\Dispute::RETRIEVAL ):\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_dspd_inquiry_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/strong>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_dspd_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/strong>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/h3>\n\t\t<br>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\t\nCONTENT;\n\nif ( isset( $response->reason ) ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\nCONTENT;\n\n$val = \"braintree_dispute_reason_{$response->reason}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $response->status ) and \\in_array( $response->status, array( \\Braintree\\Dispute::OPEN, \\Braintree\\Dispute::DISPUTED ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_bold ipsType_reset ipsType_warning ipsSpacer_top'>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $response->kind ) and $response->kind == \\Braintree\\Dispute::RETRIEVAL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$val = \"braintree_dispute_status_{$response->status}_r\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$val = \"braintree_dispute_status_{$response->status}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsMessage ipsMessage_error'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'braintree_dispute_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $response->status ) and $response->status == \\Braintree\\Dispute::WON ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsClearfix cTransaction_positive'>\n\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t<i class='fa fa-repeat'><\/i>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_won', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_won_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\nCONTENT;\n\nelseif ( isset( $response->status ) and \\in_array( $response->status, array( \\Braintree\\Dispute::LOST, \\Braintree\\Dispute::ACCEPTED, \\Braintree\\Dispute::EXPIRED ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsClearfix cTransaction_negative'>\n\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t<i class='fa fa-times'><\/i>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_lost', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_lost_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction dspd( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $extraData = $transaction->method->disputeData( $transaction, $log ) ):\n$return .= <<<CONTENT\n\n\t{$extraData}\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<li class='ipsClearfix cTransaction_intermediate'>\n\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t<i class='fa fa-undo'><\/i>\n\t\t<\/div>\n\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_dspd_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/strong>\n\t\t\t<\/h3>\n\t\t\t<br>\n\t\t\t\n\t\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction fail( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_negative'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-times'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_fail_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/h3>\n\t\t<br>\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['note'] ) and $log['note'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset cTransaction_note ipsType_medium'>\n\t\t\t\t\nCONTENT;\n\n$val = \"trans_extra_{$log['note']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['noteRaw'] ) and $log['noteRaw'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset cTransaction_note ipsType_medium'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $log['noteRaw'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction hold( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-warning'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<span class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_hold_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<br>\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['note'] ) and $log['note'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset cTransaction_note ipsType_medium'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $log['note'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction link( $transaction ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->acpUrl(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$sprintf = array($transaction->id); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_number', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction okay( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_positive'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-check'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_okay_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/h3>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_okay_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction paypalStatus( $transaction ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $transaction->extra['verified'] ) ):\n$return .= <<<CONTENT\n\n\t<p class='ipsType_normal ipsType_reset'>\n\t\t\nCONTENT;\n\n$sprintf = array($transaction->extra['verified']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'paypal_payer_status', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction prfd( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_intermediate'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\nCONTENT;\n\nif ( $log['to'] === 'credit' ):\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-reply'><\/i>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-reply-all'><\/i>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\nif ( $log['to'] === 'credit' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_credited', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_prfd_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/h3>\n\t\t<br>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['amount'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $transaction->amount->amount->compare( new \\IPS\\Math\\Number( $log['amount'] ) ) !== 0 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_reset ipsType_large'>\n\t\t\t\t\t<span class='cNexusPrice'>\nCONTENT;\n\n$return .= new \\IPS\\nexus\\Money( $log['amount'], $transaction->currency );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( isset( $log['ref'] ) and $log['ref'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $log['ref'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction revw( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_intermediate'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-flag'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<span class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_revw_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<br>\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rfnd( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_negative'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-reply-all'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\nif ( $log['to'] === 'credit' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_credited', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_rfnd_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/h3>\n\t\t<br>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['ref'] ) and $log['ref'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_medium'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $log['ref'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction status( $status ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span class=\"ipsBadge ipsBadge_style\nCONTENT;\n\nif ( $status == \\IPS\\nexus\\Transaction::STATUS_PAID ):\n$return .= <<<CONTENT\n4\nCONTENT;\n\nelseif ( $status == \\IPS\\nexus\\Transaction::STATUS_HELD ):\n$return .= <<<CONTENT\n1\nCONTENT;\n\nelseif ( $status == \\IPS\\nexus\\Transaction::STATUS_REVIEW or $status == \\IPS\\nexus\\Transaction::STATUS_DISPUTED ):\n$return .= <<<CONTENT\n7\nCONTENT;\n\nelseif ( $status == \\IPS\\nexus\\Transaction::STATUS_REFUSED ):\n$return .= <<<CONTENT\n5\nCONTENT;\n\nelseif ( $status == \\IPS\\nexus\\Transaction::STATUS_REFUNDED or $status == \\IPS\\nexus\\Transaction::STATUS_PART_REFUNDED ):\n$return .= <<<CONTENT\n2\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n6\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\n$val = \"tstatus_{$status}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction stripeData( $response=NULL, $error=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $response['outcome'] ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_top ipsSpacer_bottom\">\n\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t<i class=\"fa fa-shield\"><\/i> \nCONTENT;\n\n$sprintf = array($response['outcome']['risk_level']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_risk_level', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $response['source']['card'] ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_bottom\">\n\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\nCONTENT;\n\nif ( isset( $response['source']['card']['tokenization_method'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $response['source']['card']['tokenization_method'] == 'apple_pay' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-apple\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_tokenization_apple_pay', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['tokenization_method'] == 'android_pay' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class=\"fa fa-google\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_tokenization_android_pay', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_tokenization_other', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $response['source']['card']['tokenization_method'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $response['source']['card']['brand'] == 'Visa' or $response['source']['card']['brand'] == 'visa' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-visa\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_visa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['brand'] == 'MasterCard' or $response['source']['card']['brand'] == 'mastercard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-mastercard\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_mastercard', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['brand'] == 'Discover' or $response['source']['card']['brand'] == 'discover' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-discover\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_discover', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['brand'] == 'American Express' or $response['source']['card']['brand'] == 'amex' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-amex\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_american_express', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['brand'] == 'Diners Club' or $response['source']['card']['brand'] == 'diners' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-diners-club\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_diners_club', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card']['brand'] == 'JCB' or $response['source']['card']['brand'] == 'jcb' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cc-jcb\" data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_type_jcb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><\/i>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-credit-card\"><\/i>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t&middot;&middot;&middot;&middot;\nCONTENT;\n$return .= htmlspecialchars( $response['source']['card']['last4'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t&nbsp;\n\t\t\t<span class=\"ipsType_small\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expires', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= htmlspecialchars( str_pad( $response['source']['card']['exp_month'], 2, '0', STR_PAD_LEFT ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/\nCONTENT;\n$return .= htmlspecialchars( $response['source']['card']['exp_year'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_origin', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"country-{$response['source']['card']['country']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/span>\n\t\t<\/p>\n\t\t\nCONTENT;\n\nforeach ( array( 'cvc_check', 'address_line1_check', 'address_zip_check' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_normal ipsTruncate ipsTruncate_line'>\n\t\t\t\t\nCONTENT;\n\nif ( $response['source']['card'][ $k ] == 'pass' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$val = \"stripe_{$k}_pass\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelseif ( $response['source']['card'][ $k ] == 'fail' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$val = \"stripe_{$k}_fail\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_issue\"><i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\nif ( $response['source']['card'][ $k ] ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"stripe_{$k}_{$response['source']['card'][ $k ]}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"stripe_{$k}_unchecked\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $response['source']['three_d_secure'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $response['source']['three_d_secure']['authenticated'] ) and $response['source']['three_d_secure']['authenticated'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_pass', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_fail', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( isset( $response['source']['card'] ) and isset( $response['source']['card']['three_d_secure'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $response['source']['card']['three_d_secure']['succeeded'] ) and $response['source']['card']['three_d_secure']['succeeded'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_success\"><i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$sprintf = array($response['source']['card']['three_d_secure']['version']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_pass_version', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$sprintf = array($response['source']['card']['three_d_secure']['version']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_fail_version', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( !isset( $response['card']['three_d_secure'] ) or $response['card']['three_d_secure'] == 'not_supported' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_neutral\"><i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_not_supported', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_3ds_not_checked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t<p class='ipsMessage ipsMessage_error'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_details_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction stripeDispute( $transaction, $log, $response=NULL, $error=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_intermediate'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\nCONTENT;\n\nif ( isset( $response['status'] ) and \\in_array( $response['status'], array( 'warning_needs_response', 'warning_under_review', 'warning_closed', 'charge_refunded' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-exclamation-triangle'><\/i>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<i class='fa fa-undo'><\/i>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\nCONTENT;\n\nif ( isset( $response['status'] ) and \\in_array( $response['status'], array( 'warning_needs_response', 'warning_under_review', 'warning_closed', 'charge_refunded' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_dspd_inquiry_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/strong>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_dspd_set', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/strong>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/h3>\n\t\t<br>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( isset( $response['reason'] ) ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\nCONTENT;\n\n$val = \"stripe_dispute_reason_{$response['reason']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $response['status'] ) and \\in_array( $response['status'], array( 'needs_response', 'under_review', 'warning_needs_response', 'warning_under_review' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_bold ipsType_reset ipsType_warning ipsSpacer_top'>\n\t\t\t\t\nCONTENT;\n\n$val = \"stripe_dispute_status_{$response['status']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsMessage ipsMessage_error'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stripe_dispute_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $response['status'] ) and $response['status'] == 'won' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsClearfix cTransaction_positive'>\n\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t<i class='fa fa-repeat'><\/i>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_won', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_won_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->status === $transaction::STATUS_DISPUTED ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->acpUrl()->setQueryString( array( 'do' => 'approve', 'r' => 'v' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_positive ipsButton_verySmall\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_approve_from_dispute', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->acpUrl()->setQueryString( array( 'do' => 'refund', 'r' => 'v' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_negative ipsButton_verySmall\" data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$sprintf = array($transaction->amount); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_refund_credit_title', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_refund_credit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( isset( $response['status'] ) and $response['status'] == 'warning_closed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsClearfix cTransaction_positive'>\n\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t<i class='fa fa-check'><\/i>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_warning_closed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_warning_closed_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\nCONTENT;\n\nelseif ( isset( $response['status'] ) and $response['status'] == 'lost' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsClearfix cTransaction_negative'>\n\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t<i class='fa fa-times'><\/i>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_lost', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_dispute_lost_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction undo_credit( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix cTransaction_intermediate'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-forward'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<h3 class=\"ipsType_sectionHead\">\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_credited_undo', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/h3>\n\t\t<br>\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['amount'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $transaction->amount->amount->compare( new \\IPS\\Math\\Number( $log['amount'] ) ) !== 0 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_reset ipsType_large'>\n\t\t\t\t\t<span class='cNexusPrice'>\nCONTENT;\n\n$return .= new \\IPS\\nexus\\Money( $log['amount'], $transaction->currency );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction view( $transaction ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsColumns ipsColumns_collapsePhone'>\n\t<div class='ipsColumn ipsColumn_wide'>\n\t\t<div class=\"ipsBox ipsType_center ipsPad ipsSpacer_bottom\" data-ipsSticky data-ipsSticky-spacing='30' data-ipsSticky-disableIn='phone'>\n\t\t\t<h2 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_total', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t<span class=\"ipsType_veryLarge\">\nCONTENT;\n$return .= htmlspecialchars( $transaction->amount, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nif ( $transaction->status === $transaction::STATUS_PART_REFUNDED ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $transaction->partial_refund->amount->isGreaterThanZero() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t\t\t<h2 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'amount_refunded', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t<span class=\"ipsType_large\">\nCONTENT;\n$return .= htmlspecialchars( $transaction->partial_refund, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $transaction->credit->amount->isGreaterThanZero() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t\t\t<h2 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'amount_credited', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t<span class=\"ipsType_large\">\nCONTENT;\n$return .= htmlspecialchars( $transaction->credit, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<hr class='ipsHr'>\n\n\t\t\t<ul class='ipsToolList ipsToolList_vertical'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $transaction->buttons('v') as $k => $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $button['link'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_fullWidth \nCONTENT;\n\nif ( $k === 'approve' ):\n$return .= <<<CONTENT\nipsButton_veryLarge ipsButton_positive ipsSpacer_bottom ipsSpacer_half\nCONTENT;\n\nelseif ( $k === 'void' ):\n$return .= <<<CONTENT\nipsButton_medium ipsButton_negative\nCONTENT;\n\nelseif ( $k === 'delete' ):\n$return .= <<<CONTENT\nipsButton_link\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsButton_medium ipsButton_light\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( isset( $button['data'] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nforeach ( $button['data'] as $k => $v ):\n$return .= <<<CONTENT\ndata-\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $button['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$val = \"{$button['title']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\n\t<\/div>\n\n\t<div class='ipsColumn ipsColumn_fluid'>\n\n\t\t<div class=\"ipsMessage ipsSpacer_bottom \nCONTENT;\n\nif ( $transaction->status == \\IPS\\nexus\\Transaction::STATUS_PAID ):\n$return .= <<<CONTENT\nipsMessage_success\nCONTENT;\n\nelseif ( $transaction->status == \\IPS\\nexus\\Transaction::STATUS_HELD ):\n$return .= <<<CONTENT\nipsMessage_warning\nCONTENT;\n\nelseif ( $transaction->status == \\IPS\\nexus\\Transaction::STATUS_REVIEW ):\n$return .= <<<CONTENT\nipsMessage_warning\nCONTENT;\n\nelseif ( $transaction->status == \\IPS\\nexus\\Transaction::STATUS_REFUSED or $transaction->status == \\IPS\\nexus\\Transaction::STATUS_DISPUTED ):\n$return .= <<<CONTENT\nipsMessage_error\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsMessage_info\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\nCONTENT;\n\nif ( $transaction->auth and \\in_array( $transaction->status, array( \\IPS\\nexus\\Transaction::STATUS_HELD, \\IPS\\nexus\\Transaction::STATUS_REVIEW ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$val = \"tstatus_{$transaction->status}_nc_desc\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$val = \"tstatus_{$transaction->status}_desc\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t\n\n\t\t\nCONTENT;\n\nif ( isset( $transaction->extra['admin'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsMessage ipsMessage_info ipsSpacer_bottom'>\n\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $transaction->extra['admin'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_admin_manual', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( $transaction->fraud ):\n$return .= <<<CONTENT\n\n\t\t\t<h2 class='ipsBox_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t<div class='ipsBox ipsSpacer_bottom'>\n\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $errorMessage = $transaction->fraud->error() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsMessage ipsMessage_error'>\n\t\t\t\t\t\t<h3 class='ipsMessage_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'error_from_maxmind', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->err, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $warning = $transaction->fraud->warning() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsMessage ipsMessage_error'>\n\t\t\t\t\t\t\t<h3 class='ipsMessage_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_from_maxmind', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->err, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class=\"ipsSpacer_bottom ipsSpacer_double\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->riskScore !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<h3 class='cTransactionFraud_riskScore ipsType_reset ipsPos_left \nCONTENT;\n\nif ( $transaction->fraud->riskScore > 80 ):\n$return .= <<<CONTENT\nipsType_warning\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->riskScore, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%<\/h3>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<h3 class='cTransactionFraud_riskScore ipsType_reset ipsPos_left \nCONTENT;\n\nif ( $transaction->fraud->score > 8 ):\n$return .= <<<CONTENT\nipsType_warning\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= htmlspecialchars( round( $transaction->fraud->score * 10 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%<\/h3>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_reset cTransactionFraud_riskInfo'>\n\t\t\t\t\t\t\t<span class='ipsType_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'possibility_of_fraud', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t\t\t\t\t<span class='ipsType_normal ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'checked_by_maxmind', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t<\/div>\n\n\t\t\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t\t\t\t<div class='ipsGrid_span4 ipsAreaBackground_reset'>\n\t\t\t\t\t\t\t<h3 class='acpBlock_title acpBlock_titleSmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_geo_ip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_latitude AND $transaction->fraud->ip_longitude ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\GeoLocation::enabled() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$map = \\IPS\\GeoLocation::getByLatLong( $transaction->fraud->ip_latitude, $transaction->fraud->ip_longitude )->map()->render( 600, 200 );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsPad_half\">{$map}<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_normal'>\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_latitude, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n,\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_longitude, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<p class=\"ipsType_reset ipsType_normal ipsSpacer_top ipsSpacer_half\">\nCONTENT;\n\n$sprintf = array($transaction->fraud->distance); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_distance', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t<p class=\"ipsType_reset ipsType_small ipsType_light\">\nCONTENT;\n\nif ( $transaction->fraud->ip_accuracyRadius ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($transaction->fraud->ip_accuracyRadius); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_accuracyRadius', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_distance_estimated', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/p>\n\n\t\t\t\t\t\t\t\t<ul class='ipsList_reset ipsType_normal ipsSpacer_bottom cTransactionFraud_geoip ipsSpacer_top'>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<span \nCONTENT;\n\nif ( $transaction->fraud->ip_cityConf ):\n$return .= <<<CONTENT\nclass='cTransactionFraud_geoInfo' title='\nCONTENT;\n\n$sprintf = array($transaction->fraud->ip_cityConf); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_accuracy', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_city, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_metroCode ):\n$return .= <<<CONTENT\n<span class='ipsType_light'>(\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_metroCode, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_regionName || $transaction->fraud->ip_region || $transaction->fraud->ip_postalCode ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_regionName || $transaction->fraud->ip_region ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span \nCONTENT;\n\nif ( $transaction->fraud->ip_regionConf ):\n$return .= <<<CONTENT\nclass='cTransactionFraud_geoInfo' title='\nCONTENT;\n\n$sprintf = array($transaction->fraud->ip_regionConf); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_accuracy', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_regionName ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_regionName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $transaction->fraud->ip_region ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_region, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_postalCode ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span \nCONTENT;\n\nif ( $transaction->fraud->ip_postalConf ):\n$return .= <<<CONTENT\nclass='cTransactionFraud_geoInfo' title='\nCONTENT;\n\n$sprintf = array($transaction->fraud->ip_postalConf); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_accuracy', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_postalCode ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_postalCode, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_countryName || $transaction->fraud->countryCode ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<span \nCONTENT;\n\nif ( $transaction->fraud->ip_countryConf ):\n$return .= <<<CONTENT\nclass='cTransactionFraud_geoInfo' title='\nCONTENT;\n\n$sprintf = array($transaction->fraud->ip_countryConf); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_accuracy', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_countryName ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_countryName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $transaction->fraud->countryCode ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"country-{$transaction->fraud->countryCode}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\t\t\t\t<ul class='ipsList_reset cTransactionFraud'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->countryMatch == 'Yes' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_countryMatch_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-triangle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_countryMatch_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->highRiskCountry == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_highRiskCountry_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-triangle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_highRiskCountry_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div class='ipsGrid_span4 ipsAreaBackground_reset'>\n\t\t\t\t\t\t\t<h3 class='acpBlock_title acpBlock_titleSmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t<div class=\"ipsProgressBar ipsProgressBar_small ipsProgressBar_fullWidth\">\n\t\t\t\t\t\t\t\t\t<div class=\"ipsProgressBar_progress \nCONTENT;\n\nif ( $transaction->fraud->proxyScorePercentage() > 75 ):\n$return .= <<<CONTENT\nipsProgressBar_warning\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" style=\"width: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->proxyScorePercentage(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%\">\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->proxyScorePercentage(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_medium ipsSpacer_top ipsSpacer_half'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_proxyScore', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_small ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_proxyScore_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\n\t\t\t\t\t\t\t\t<ul class='ipsList_reset cTransactionFraud ipsSpacer_top'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->anonymousProxy == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_success ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='cTransactionFraud_geoInfo' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_anonymousProxy_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_anonymousProxy_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='cTransactionFraud_geoInfo' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_anonymousProxy_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_anonymousProxy_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( array( 'isTransProxy', 'ip_corporateProxy' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->$k == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"maxmind_{$k}_n\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"maxmind_{$k}_y\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_isp ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_isp', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_isp, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_org and $transaction->fraud->ip_org != $transaction->fraud->ip_isp ):\n$return .= <<<CONTENT\n \n\t\t\t\t\t\t\t\t\t\t\t\t\t<br><span class=\"ipsType_light ipsType_small\">(\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_org, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_userType ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"maxmind_ip_userType_{$transaction->fraud->ip_userType}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_timeZone ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_timeZone', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_timeZone, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_netSpeedCell ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_netSpeedCell', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_netSpeedCell, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_domain ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_domain', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_domain, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->ip_asnum ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_ip_asnum', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->ip_asnum, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div class='ipsGrid_span4 ipsAreaBackground_reset'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binMatch !== 'NA' and $transaction->fraud->binMatch !== 'NotFound' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<h3 class='acpBlock_title acpBlock_titleSmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_card_issuer', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binName ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_large'>\n\t\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->binName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binCountry || $transaction->fraud->binPhone ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<ul class='ipsList_reset cTransactionFraud ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binCountry ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-globe\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"country-{$transaction->fraud->binCountry}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binPhone ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-phone\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud->binPhone, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\t\t<ul class='ipsList_reset cTransactionFraud \nCONTENT;\n\nif ( $transaction->fraud->binName ):\n$return .= <<<CONTENT\nipsSpacer_top\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->binMatch == 'Yes' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_success ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_binMatch_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_binMatch_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_neutral ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->prepaid == 'Yes' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_binMatch_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_binMatch_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t<\/ul>\t\t\t\t\t\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t<h3 class='acpBlock_title acpBlock_titleSmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_customer_information', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t<ul class='ipsList_reset cTransactionFraud'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->custPhoneInBillingLoc and $transaction->fraud->custPhoneInBillingLoc != 'NotFound' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->custPhoneInBillingLoc == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_custPhoneInBillingLoc_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_custPhoneInBillingLoc_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->cityPostalMatch ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->cityPostalMatch == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_cityPostalMatch_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_cityPostalMatch_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->shipCityPostalMatch ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->shipCityPostalMatch == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_shipCityPostalMatch_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_shipCityPostalMatch_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->shipForward and $transaction->fraud->shipForward != 'NA' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->shipForward == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_shipForward_n', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_shipForward_y', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( array( 'freeMail', 'carderEmail' ) as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->$k == 'No' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_positive ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$val = \"maxmind_{$k}_n\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='cTransactionFraud_negative ipsClearfix'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation-circle\"><\/i>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$val = \"maxmind_{$k}_y\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t<p class='ipsType_reset ipsType_medium ipsType_light'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud->minfraud_version ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($transaction->fraud->service_level, $transaction->fraud->minfraud_version, $transaction->fraud->maxmindID); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_footer', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n (\nCONTENT;\n\n$sprintf = array($transaction->fraud->queriesRemaining); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_queries', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n)\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_footer_old', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !$transaction->fraud->minfraud_version or version_compare( $transaction->fraud->minfraud_version, '1.3' ) === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<span class=\"ipsType_warning\">\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= \\IPS\\Http\\Url::ips( \"docs\/maxmind_version\" );\n$return .= <<<CONTENT\n' class=\"ipsType_blendLinks\" target='_blank' rel='noopener'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'maxmind_upgrade_version', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\t\t\t\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_history', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<div class=\"ipsBox\">\n\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t<ul class='ipsList_reset cTransaction ipsClearfix'>\n\t\t\t\t\t\t\t<li class='ipsClearfix'>\t\n\t\t\t\t\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t\t\t\t\t<i class='fa fa-shopping-cart'><\/i>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t\t\t\t\t<h2 class='ipsType_sectionHead'>\n\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( $transaction->status, array( \\IPS\\nexus\\Transaction::STATUS_PENDING, \\IPS\\nexus\\Transaction::STATUS_WAITING ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($transaction->method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_method_pending', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($transaction->method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_method', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_okay_credit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t\t\t\t\t<\/h2>\n\t\t\t\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->date, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->gw_id ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'payment_reference', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\nif ( $url = $transaction->method->gatewayUrl( $transaction ) ):\n$return .= <<<CONTENT\n<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $url->makeSafeForAcp(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" target=\"_blank\" rel='noopener'>\nCONTENT;\n$return .= htmlspecialchars( $transaction->gw_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $transaction->gw_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->method and $extraData = $transaction->method->extraData( $transaction ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t{$extraData}\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->billing_agreement ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->billing_agreement->acpUrl(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsType_blendLinks\">\nCONTENT;\n\n$sprintf = array($transaction->billing_agreement->gw_id); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'billing_agreement', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><br>\n\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->ip ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\t\t\t\t\t\t<a class=\"ipsType_blendLinks\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=ip&ip={$transaction->ip}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$sprintf = array($transaction->ip); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_ip', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->fraud_blocked ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsClearfix'>\n\t\t\t\t\t\t\t\t\t<div class='cTransaction_icon ipsPos_left'>\n\t\t\t\t\t\t\t\t\t\t<i class='fa fa-exclamation-circle'><\/i>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<div class='cTransaction_info ipsType_normal'>\n\t\t\t\t\t\t\t\t\t\t<h2 class='ipsType_sectionHead'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'triggered_fraud_rule', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h2>\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->fraud_blocked->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $transaction->history() as $log ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"transactions\", \\IPS\\Request::i()->app )->{$log['s']}( $transaction, $log );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\nCONTENT;\n\nif ( $transaction->member->member_id ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_customer', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t<div class='ipsBox ipsSpacer_bottom'>\n\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small ipsClearfix'>\n\t\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->acpUrl(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsPos_left'><img src='\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_small'><\/a>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h3 class=\"ipsType_sectionHead ipsType_reset\">\n\t\t\t\t\t\t\t\t\t\t<strong><a class=\"ipsType_blendLinks\" href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->acpUrl(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->cm_name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/strong>\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;<span class='ipsType_normal ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->email, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t<\/h3>\n\t\t\t\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($transaction->member->joined->localeDate()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_customer_since', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($transaction->member->totalSpent()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_spent', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->hasAcpRestriction( 'nexus', 'customers', 'customers_void' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=nexus&module=customers&controller=view&do=void&id={$transaction->member->member_id}&rt={$transaction->id}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_light ipsButton_verySmall ipsSpacer_top\" data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'void_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'void_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'transaction_history', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t<div class='ipsBox ipsSpacer_bottom'>\n\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t<div class='ipsAreaBackground_light ipsPad ipsPhotoPanel ipsPhotoPanel_large ipsClearfix'>\n\t\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $transaction->member->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_medium ipsPos_left'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->invoice ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"ipsType_sectionHead ipsType_reset\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $transaction->invoice->guest_data['member']['name'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->invoice->guest_data['member']['name'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( isset( $transaction->invoice->guest_data['member']['cm_first_name'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $transaction->invoice->guest_data['member']['cm_first_name'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $transaction->invoice->guest_data['member']['cm_last_name'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;<span class='ipsType_normal ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $transaction->invoice->guest_data['member']['email'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\t<\/h3>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<span class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'guest', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\t\t\t\nCONTENT;\n\nif ( $transaction->invoice ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class=\"ipsBox_title\">\nCONTENT;\n\n$sprintf = array($transaction->invoice->id); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'invoice_number', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t<div class=\"ipsBox ipsSpacer_bottom\">\n\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$summary = $transaction->invoice->summary();\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<ul class='ipsDataList ipsDataList_reducedSpacing'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $summary['items'] as $item ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class=\"ipsDataItem ipsClearfix\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_main\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $item->quantity > 1 ):\n$return .= <<<CONTENT\n x\nCONTENT;\n$return .= htmlspecialchars( $item->quantity, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $item->details ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"ipsType_light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $item->details as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"nexus_pfield_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size3 ipsType_right\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->linePrice(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class=\"ipsDataItem ipsClearfix cTransactionInvoice_subtotal\">\n\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_main\">\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'subtotal', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size3 ipsType_right\">\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $summary['subtotal'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $summary['shipping'] as $shipping ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class=\"ipsDataItem ipsClearfix\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_main\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $shipping->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size3 ipsType_right\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $shipping->price, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $summary['tax'] as $taxId => $tax ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class=\"ipsDataItem ipsClearfix\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_main\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"nexus_tax_{$taxId}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size3 ipsType_right\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $tax['amount'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class=\"ipsDataItem ipsType_large ipsClearfix cTransactionInvoice_subtotal\">\n\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_main\">\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'total', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size3 ipsType_right\">\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $summary['total'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $transaction->invoice->acpUrl(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsSpacer_top ipsButton ipsButton_light ipsButton_medium ipsButton_fullWidth\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'invoice_view', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-angle-right'><\/i>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->invoice->billaddress || $transaction->invoice->shipaddress ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h3 class='ipsBox_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'invoice_addresses', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t<div class=\"ipsBox\">\n\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->invoice->billaddress ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<div class='ipsGrid ipsGrid_collapsePhone ipsSpacer_bottom'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\GeoLocation::enabled() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\t\t\t\t\t\t\t{$transaction->invoice->billaddress->map()->render( 350, 150 )}\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span12'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<h4 class='ipsType_minorHeading ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'billing_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t\t\t\t\t\t\t\t\t{$transaction->invoice->billaddress->toString('<br>')}\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $transaction->invoice->shipaddress ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\GeoLocation::enabled() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\t\t\t\t\t\t\t{$transaction->invoice->shipaddress->map()->render( 350, 150 )}\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span12'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<h4 class='ipsType_minorHeading ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'shipping_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t\t\t\t\t\t\t\t\t{$transaction->invoice->shipaddress->toString('<br>')}\n\t\t\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class=\"ipsMessage ipsMessage_info\">\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'trans_invoice_deleted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\t\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction wait( $transaction, $log ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsClearfix'>\n\t<div class='cTransaction_icon ipsPos_left'>\n\t\t<i class='fa fa-clock-o'><\/i>\n\t<\/div>\n\t<div class='cTransaction_info ipsType_normal'>\n\t\t<span class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tstatus_wait', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nif ( isset( $log['on'] ) and $log['on'] ):\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $log['on'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $log['by'] ) and $log['by'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $log['by'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $log['note'] ) and $log['note'] ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset cTransaction_note ipsType_medium'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $log['note'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
