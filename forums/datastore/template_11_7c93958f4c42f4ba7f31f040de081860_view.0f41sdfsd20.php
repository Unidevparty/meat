<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_calendar_front_view extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = 'cca86601976a96130f067bcd22c99e27';\n\tfunction attendees( $event ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPrint\">\n\t<h1>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n<\/h1>\n\t<h2>\nCONTENT;\n\n$sprintf = array($event->title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<h4 class='date'>\n\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->_start_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->_start_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->_start_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->_start_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->_start_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->_end_date ):\n$return .= <<<CONTENT\n - \nCONTENT;\n$return .= htmlspecialchars( $event->_end_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->_end_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->_end_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->_end_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->_end_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/h4>\n\t<div><\/div>\n\t<div><\/div>\n\n\t<h3>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_rsvp_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t<ul>\n\t\t\nCONTENT;\n\nif ( \\count( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES ) )  ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES ) as $attendee  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<li><em>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rsvps_yet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em><\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\n\t\nCONTENT;\n\nif ( \\count( $event->attendees( \\IPS\\calendar\\Event::RSVP_MAYBE ) )  ):\n$return .= <<<CONTENT\n\n\t\t<div><\/div>\n\t\t<h3>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_maybe_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<ul>\n\t\t\t\nCONTENT;\n\nforeach ( $event->attendees( \\IPS\\calendar\\Event::RSVP_MAYBE ) as $attendee  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nif ( \\count( $event->attendees( \\IPS\\calendar\\Event::RSVP_NO ) )  ):\n$return .= <<<CONTENT\n\n\t\t<div><\/div>\n\t\t<h3>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notgoing_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<ul>\n\t\t\t\nCONTENT;\n\nforeach ( $event->attendees( \\IPS\\calendar\\Event::RSVP_NO ) as $attendee  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction comments( $event ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='' data-controller='core.front.core.commentFeed, core.front.core.ignoredComments' \nCONTENT;\n\nif ( \\IPS\\Settings::i()->auto_polling_enabled ):\n$return .= <<<CONTENT\ndata-autoPoll\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-baseURL='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $event->isLastPage() ):\n$return .= <<<CONTENT\ndata-lastPage\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-feedID='event-\nCONTENT;\n$return .= htmlspecialchars( $event->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='comments'>\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->featuredComments( $event->featuredComments(), $event->url()->setQueryString('tab', 'comments')->setQueryString('recommended', 'comments') );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimodHeader( $event, '#comments' );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $event->commentPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t{$event->commentPagination( array( 'tab' ) )}\n\t\t<br><br>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t<div data-role='commentFeed' data-controller='core.front.core.moderation'>\n\t\t\nCONTENT;\n\nif ( ( $comments = $event->comments( NULL, NULL, 'date', 'asc', NULL, NULL, NULL, NULL, FALSE, isset( \\IPS\\Request::i()->showDeleted ) ) and \\count( $comments ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<form action=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( 'do', 'multimodComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-ipsPageAction data-role='moderationTools'>\n\t\t\t\t\nCONTENT;\n\n$commentCount=0; $timeLastRead = $event->timeLastRead(); $lined = FALSE;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $comments as $comment ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$lined and $timeLastRead and $timeLastRead->getTimestamp() < $comment->mapped('date') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $lined = TRUE and $commentCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<hr class=\"ipsCommentUnreadSeperator\">\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$commentCount++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$comment->html()}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimod( $event );\n$return .= <<<CONTENT\n\n\t\t\t<\/form>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_normal ipsType_light ipsType_center' data-role='noComments'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $event->commentPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr'>\n\t\t{$event->commentPagination( array( 'tab' ) )}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $event->commentForm() || $event->locked() || \\IPS\\Member::loggedIn()->restrict_post || \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] || !\\IPS\\Member::loggedIn()->checkPostsPerDay() ):\n$return .= <<<CONTENT\n\n\t\t<a id='replyForm'><\/a>\n\t\t<div data-role='replyArea' class='ipsBox ipsBox_transparent ipsAreaBackground ipsPad \nCONTENT;\n\nif ( !$event->canComment() ):\n$return .= <<<CONTENT\ncTopicPostArea_noSize\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsSpacer_top'>\n\t\t\t\nCONTENT;\n\nif ( $event->commentForm() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_reset ipsType_warning ipsComposeArea_warning ipsSpacer_bottom ipsSpacer_half'><i class='fa fa-info-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_locked_can_comment', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t{$event->commentForm()}\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'event_locked_cannot_comment' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedIn()->restrict_post ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'restricted_cannot_comment', \\IPS\\Member::loggedIn()->warnings(5,NULL,'rpa'), \\IPS\\Member::loggedIn()->restrict_post );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'unacknowledged_warning_cannot_post', \\IPS\\Member::loggedIn()->warnings( 1, FALSE ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( !\\IPS\\Member::loggedIn()->checkPostsPerDay() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'member_exceeded_posts_per_day' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coverPhotoOverlay( $event ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='cEvent_details'>\n\t<h1 class='ipsType_pageTitle ipsContained_container ipsType_break'>\n\t\t\nCONTENT;\n\nif ( $event->prefix() ):\n$return .= <<<CONTENT\n\n\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( $event->prefix( TRUE ), $event->prefix() );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( $event->locked() ):\n$return .= <<<CONTENT\n<span><span><i class='fa fa-lock'><\/i><\/span><\/span> \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( $event->mapped('pinned') || $event->mapped('featured') || $event->hidden() === -1 || $event->hidden() === 1 || $event->hidden() === -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $event->hiddenBlurb(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nelseif ( $event->hidden() === -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $event->deletedBlurb(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-trash'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nelseif ( $event->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->mapped('pinned') ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pinned', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-thumb-tack'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->mapped('featured') ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'featured', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-star'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_break ipsContained ipsPageHead_barText' data-controller=\"core.front.core.moderation\">\n\t\t\t\t<span data-role=\"editableTitle\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'click_hold_edit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/span>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_break ipsContained ipsPageHead_barText'>\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/h1>\n\t<p class='ipsType_normal ipsType_reset ipsPageHead_barText_small'>\n\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $event->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nif ( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span data-controller=\"core.global.core.datetime\" data-time=\"\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->format('c'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-format=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::calendarDateFormat(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::localeTimeFormat( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<span data-controller=\"core.global.core.datetime\" data-time=\"\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->format('c'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-format=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::calendarDateFormat(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::localeTimeFormat( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/time>\n\t\t\nCONTENT;\n\nif ( $event->_end_date ):\n$return .= <<<CONTENT\n\n\t\t\t&nbsp;&nbsp;<i class='fa fa-arrow-circle-right ipsType_large ipsType_light'><\/i>&nbsp;&nbsp;\n\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $event->_end_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\n$sameDay = !( ($event->_start_date->mday != $event->_end_date->mday) or ($event->_start_date->mon != $event->_end_date->mon) or ($event->_start_date->year != $event->_end_date->year) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $endDate = $event->nextOccurrence( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: \\IPS\\calendar\\Date::getDate(), 'endDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span data-controller=\"core.global.core.datetime\" data-time=\"\nCONTENT;\n$return .= htmlspecialchars( $endDate->format('c'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-format=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::calendarDateFormat(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $endDate->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span data-controller=\"core.global.core.datetime\" data-time=\"\nCONTENT;\n$return .= htmlspecialchars( $endDate->format('c'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-format=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::localeTimeFormat( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $endDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span data-controller=\"core.global.core.datetime\" data-time=\"\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->format('c'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-format=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::calendarDateFormat(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\calendar\\Date::localeTimeFormat( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/p>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction eventBlock( $event, $date, $truncate=FALSE, $map=array( 300, 200 ), $revertToFirst=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$coverPhoto = $event->coverPhoto();\n$return .= <<<CONTENT\n\n<div class='cCalendarBlock ipsAreaBackground_reset ipsBox'>\n\t<div class='ipsPageHead_special ipsCoverPhoto' data-controller='core.global.core.coverPhoto' data-coverOffset='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->offset, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\nif ( $coverPhoto->file ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsCoverPhoto_container'>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->lazy_load_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Text\\Parser::blankImage(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-src='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCoverPhoto_photo' alt='\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCoverPhoto_photo' alt='\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsColumns'>\n\t\t\t<div class='ipsColumn ipsColumn_fixed ipsColumn_veryNarrow ipsPos_center'>\n\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $event->author()->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsUserPhoto ipsUserPhoto_mini\" alt=''>\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t<h2 class='ipsType_pageTitle ipsType_blendLinks ipsPageHead_barText ipsPageHead_barText_small'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= htmlspecialchars( mb_substr( html_entity_decode( $event->title ), '0', \"18\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE ) . ( ( mb_strlen( html_entity_decode( $event->title ) ) > \"18\" ) ? '&hellip;' : '' );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $event->hidden() === 1 ):\n$return .= <<<CONTENT\n <span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/h2>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<br>\n\t<div class='ipsPad ipsClearfix'>\n\t\t<h3 class='ipsType_reset'>\n\t\t\t\nCONTENT;\n\n$startDate = $event->nextOccurrence( $date, 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $revertToFirst AND $startDate AND $startDate->mon > $date->mon ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$startDate = $event->nextOccurrence( \\IPS\\calendar\\Date::getDate( $date->year, $date->mon, 1 ), 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $startDate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$nextEndDate = $event->nextOccurrence( $startDate ?: $date, 'endDate' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$sameDay = ( $nextEndDate AND $startDate->calendarDate() == $nextEndDate->calendarDate() );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $startDate->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->_end_date AND $event->nextOccurrence( $startDate ?: $date, 'endDate' )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&nbsp;&nbsp;<i class='fa fa-arrow-circle-right ipsType_large ipsType_light'><\/i>&nbsp;&nbsp;\n\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( $startDate ?: $date, 'endDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( $startDate ?: $date, 'endDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->_end_date AND $event->lastOccurrence( 'endDate' )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&nbsp;&nbsp;<i class='fa fa-arrow-circle-right ipsType_large ipsType_light'><\/i>&nbsp;&nbsp;\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/h3>\n\t\t\nCONTENT;\n\nif ( $event->recurring ):\n$return .= <<<CONTENT\n<p class='ipsType_reset ipsType_normal ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $event->_recurring_text, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p><br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_richText ipsType_medium' \nCONTENT;\n\nif ( ( \\IPS\\Request::i()->isAjax() or $truncate ) && $event->content ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='5 lines'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\nCONTENT;\n\nif ( $event->content ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() or $truncate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$event->truncated()}\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$event->content}\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_medium ipsType_richText ipsSpacer_both'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $map !== FALSE AND $event->map( $map[0], $map[1] ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsAreaBackground_light cCalendarBlock_map ipsPad_half'>\n\t\t\t\t{$event->map( $map[0], $map[1] )}\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<br>\n\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsPos_right ipsResponsive_noFloat cEvents_event cEvents_eventSmall cEvents_style\nCONTENT;\n$return .= htmlspecialchars( $event->container()->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nif ( $event->container()->allow_comments ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( 'tab', 'comments' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_medium ipsType_noBreak'>\nCONTENT;\n\n$pluralize = array( $event->comments ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_comment_count', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->container()->allow_comments AND $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n&middot;\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( 'tab', 'reviews' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_medium ipsType_noBreak'>\nCONTENT;\n\n$pluralize = array( $event->reviews ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_review_count', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->rsvp  ):\n$return .= <<<CONTENT\n\n\t\t\t<hr class='ipsHr'>\n\t\t\t<h4 class='ipsType_reset'><strong>\nCONTENT;\n\n$pluralize = array( $event->attendeeCount( \\IPS\\calendar\\Event::RSVP_YES ) ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_rsvp_attendees_list', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/strong><\/h4>\n\t\t\t\nCONTENT;\n\nif ( \\count( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES, 5 ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<ul class='ipsList_inline ipsList_noSpacing ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES, 5 ) as $attendee ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $attendee, 'tiny' );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction eventBlocks( $events ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<ul class='ipsDataList ipsDataList_reducedSpacing'>\n\t\nCONTENT;\n\nforeach ( $events as $event ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsDataItem'>\n\t\t\t<div class='ipsDataItem_icon cCalendar_date_overlay'>\n\t\t\t\t\nCONTENT;\n\n$nextOccurrence = $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: $event->lastOccurrence();\n$return .= <<<CONTENT\n\n\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/time>\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title='\nCONTENT;\n\n$sprintf = array($event->title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_this_event', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><br>\n\t\t\t\t<span class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$sprintf = array($event->author()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction eventSidebar( $event, $attendees, $tabId='', $address=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $address || $event->map( 250, 150 ) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsBox ipsPad_half ipsSpacer_bottom'>\n\t\t\nCONTENT;\n\nif ( $event->map( 250, 150 ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsType_center ipsSpacer_bottom ipsSpacer_half'>\n\t\t\t\t{$event->map( 250, 150 )}\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->venue ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsSpacer_bottom'>\n\t\t\t\t<h3 class='ipsType_minorHeading'>\n\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_venue_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/h3>\n\t\t\t\t\nCONTENT;\n\n$val = \"calendar_venue_{$event->venue()->id}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'escape' => TRUE ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $address ):\n$return .= <<<CONTENT\n\n\t\t\t<h3 class='ipsType_minorHeading'>\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t<\/h3>\n\t\t\t{$address}\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $event->rsvp  ):\n$return .= <<<CONTENT\n\n\t<div class='ipsBox'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"view\", \\IPS\\Request::i()->app )->rsvpControls( $event, $attendees );\n$return .= <<<CONTENT\n\n\t\t<h3 class='ipsType_reset ipsType_sectionHead ipsHide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_rsvp_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<div class='ipsTabs ipsTabs_small ipsTabs_stretch ipsClearfix' id='elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTabBar data-ipsTabBar-contentArea='#elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_content'>\n\t\t\t<a href='#elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<ul role=\"tablist\">\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elGoing_panel' id='elGoing' class='ipsTabs_item ipsTabs_activeItem ipsType_center' role=\"tab\" aria-selected='true'>\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attendees_past', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\count($attendees[1]) ):\n$return .= <<<CONTENT\n(\nCONTENT;\n\n$return .= htmlspecialchars( \\count($attendees[1]), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $event->rsvp_limit == -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='#ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elMaybe_panel' id='elMaybe' class='ipsTabs_item ipsType_center' role=\"tab\" aria-selected='false'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_maybe_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\count($attendees[2]) ):\n$return .= <<<CONTENT\n(\nCONTENT;\n\n$return .= htmlspecialchars( \\count($attendees[2]), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\t\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elNotGoing_panel' id='elNotGoing' class='ipsTabs_item ipsType_center' role=\"tab\" aria-selected='false'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notgoing_attendees', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\count($attendees[0]) ):\n$return .= <<<CONTENT\n(\nCONTENT;\n\n$return .= htmlspecialchars( \\count($attendees[0]), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div id='elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_content' class='ipsTabs_panels'>\n\t\t\t<div id=\"ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elGoing_panel\" class='ipsTabs_panel ipsAreaBackground_reset ipsPad'>\n\t\t\t\t\nCONTENT;\n\nif ( \\count($attendees[1])  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<ul class='ipsGrid ipsList_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $attendees[1] as $attendee ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsGrid_span3'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $attendee->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\n\t\t \t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $attendee->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_mini' alt=''>\n\t \t\t\t\t\t\t\t\t<span class='ipsHide'>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t \t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t<\/a>\n\t \t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_light ipsPad ipsType_center'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rsvps_past', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rsvps_yet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $event->rsvp_limit == -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div id=\"ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elMaybe_panel\" class='ipsTabs_panel ipsAreaBackground_reset ipsPad'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\count($attendees[2])  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsGrid ipsList_reset'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $attendees[2] as $attendee ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsGrid_span3'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t\t \t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $attendee->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\n\t\t\t \t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \t\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $attendee->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_mini' alt=''>\n\t\t \t\t\t\t\t\t\t\t<span class='ipsHide'>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t \t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t\t \t\t\t\t\t\t\t<\/a>\n\t\t \t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_light ipsPad ipsType_center'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_maybe_rsvps_past', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_maybe_rsvps_yet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"ipsTabs_elAttendees\nCONTENT;\n$return .= htmlspecialchars( $tabId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_elNotGoing_panel\" class='ipsTabs_panel ipsAreaBackground_reset ipsPad'>\n\t\t\t\t\nCONTENT;\n\nif ( \\count($attendees[0])  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<ul class='ipsGrid ipsList_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $attendees[0] as $attendee ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsGrid_span3'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $attendee->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\n\t\t \t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $attendee->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_mini' alt=''>\n\t \t\t\t\t\t\t\t\t<span class='ipsHide'>\nCONTENT;\n$return .= htmlspecialchars( $attendee->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t \t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members' ) )  ):\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t\t<\/a>\n\t \t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t \t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_light ipsPad ipsType_center'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_decline_rsvps_past', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_decline_rsvps_yet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\n\t\t\t\nCONTENT;\n\nif ( \\count($attendees[0]) OR \\count($attendees[1]) OR \\count($attendees[2])  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsPad ipsType_center'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('downloadRsvp')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_link ipsButton_fullWidth' rel=\"noindex nofollow\" ><i class='fa fa-arrow-circle-o-down'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_download', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction eventStreamBlock( $event, $date, $truncate=FALSE, $map=array( 300, 200 ), $revertToFirst=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$coverPhoto = $event->coverPhoto();\n$return .= <<<CONTENT\n\n<div class='cCalendarBlock ipsAreaBackground_reset ipsBox ipsPad'>\n\t<div class='ipsPageHead_special ipsCoverPhoto' data-controller='core.global.core.coverPhoto' data-coverOffset='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->offset, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\nif ( $coverPhoto->file ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsCoverPhoto_container'>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->lazy_load_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Text\\Parser::blankImage(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-src='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCoverPhoto_photo'>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCoverPhoto_photo'>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsColumns'>\n\t\t\t<div class='ipsColumn ipsColumn_fixed ipsColumn_veryNarrow ipsPos_center'>\n\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $event->author()->photo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsUserPhoto ipsUserPhoto_mini\" alt=''>\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t<h2 class='ipsType_pageTitle ipsType_blendLinks ipsPageHead_barText ipsPageHead_barText_small'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $event->hidden() === 1 ):\n$return .= <<<CONTENT\n <span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/h2>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t\nCONTENT;\n\nif ( $map !== FALSE AND $event->map( $map[0], $map[1] ) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_light cCalendarBlock_map ipsPad_half ipsPos_right ipsBox'>\n\t\t{$event->map( $map[0], $map[1] )}\n\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<br>\n\t<div class='eventStreamDate ipsPos_left'>\n\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nif ( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->mysqlDatetime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t<\/a>\n\t<\/div>\n\t<div class='ipsPad ipsClearfix'>\n\t\t<h3 class='ipsType_reset'>\n\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $event->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nif ( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'startDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t\t\nCONTENT;\n\nif ( $event->_end_date ):\n$return .= <<<CONTENT\n\n\t\t\t&nbsp;&nbsp;<i class='fa fa-arrow-circle-right ipsType_large ipsType_light'><\/i>&nbsp;&nbsp;\n\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $event->_end_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\n$sameDay = !( ($event->_start_date->mday != $event->_end_date->mday) or ($event->_start_date->mon != $event->_end_date->mon) or ($event->_start_date->year != $event->_end_date->year) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->nextOccurrence( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: \\IPS\\calendar\\Date::getDate(), 'endDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: \\IPS\\calendar\\Date::getDate(), 'endDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $event->nextOccurrence( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: \\IPS\\calendar\\Date::getDate(), 'endDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->calendarDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->all_day ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $event->lastOccurrence( 'endDate' )->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/h3>\n\t\t\nCONTENT;\n\nif ( $event->recurring ):\n$return .= <<<CONTENT\n<p class='ipsType_reset ipsType_normal ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $event->_recurring_text, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p><br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_richText ipsType_medium' \nCONTENT;\n\nif ( ( \\IPS\\Request::i()->isAjax() or $truncate ) && $event->content ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='5 lines'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\nCONTENT;\n\nif ( $event->content ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() or $truncate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$event->truncated()}\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$event->content}\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_medium ipsType_richText ipsSpacer_both'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\t<\/div>\n\t<\/div>\n\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsResponsive_noFloat cEvents_event cEvents_eventSmall cEvents_style\nCONTENT;\n$return .= htmlspecialchars( $event->container()->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nif ( $event->container()->allow_comments ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( 'tab', 'comments' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_medium ipsType_noBreak'>\nCONTENT;\n\n$pluralize = array( $event->comments ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_comment_count', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $event->container()->allow_comments AND $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n&middot;\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( 'tab', 'reviews' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_medium ipsType_noBreak'>\nCONTENT;\n\n$pluralize = array( $event->reviews ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_review_count', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $event->rsvp  ):\n$return .= <<<CONTENT\n\n\t<hr class='ipsHr'>\n\t<h4 class='ipsType_reset'><strong>\nCONTENT;\n\n$pluralize = array( $event->attendeeCount( \\IPS\\calendar\\Event::RSVP_YES ) ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_rsvp_attendees_list', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/strong><\/h4>\n\t\nCONTENT;\n\nif ( \\count( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES, 5 ) ) ):\n$return .= <<<CONTENT\n\n\t<ul class='ipsList_inline ipsList_noSpacing ipsSpacer_top ipsSpacer_half'>\n\t\t\nCONTENT;\n\nforeach ( $event->attendees( \\IPS\\calendar\\Event::RSVP_YES, 5 ) as $attendee ):\n$return .= <<<CONTENT\n\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $attendee, 'tiny' );\n$return .= <<<CONTENT\n<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reminder( $event, $reminder, $buttonClass='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='calendar.front.view.reminderButton' data-reminderID='\nCONTENT;\n$return .= htmlspecialchars( $event->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"view\", \"calendar\" )->reminderButton( $event, $reminder, $buttonClass );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reminderButton( $event, $reminder=NULL, $buttonClass='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $reminder ):\n$return .= <<<CONTENT\n\n\t\t<a class=\"ipsButton ipsButton_primary ipsButton_verySmall \nCONTENT;\n$return .= htmlspecialchars( $buttonClass, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"reminderButton\" data-reminder=\"true\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=calendar&module=calendar&controller=event&id={$event->id}&do=setReminder\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_edit_reminder', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip class=\"ipsType_blendLinks ipsType_noUnderline\" data-ipsHover data-ipsHover-cache='false' data-ipsHover-onClick><i class='fa fa-bell'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_edit_reminder', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<a class=\"ipsButton ipsButton_light ipsButton_verySmall \nCONTENT;\n$return .= htmlspecialchars( $buttonClass, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"reminderButton\" data-reminder=\"false\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=calendar&module=calendar&controller=event&id={$event->id}&do=setReminder\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_set_reminder_tip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip class=\"ipsType_blendLinks ipsType_noUnderline\" data-ipsHover data-ipsHover-cache='false' data-ipsHover-onClick>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_set_reminder', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reminderForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form \nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax()  ):\n$return .= <<<CONTENT\ndata-controller='calendar.front.view.reminderForm'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm >\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsPad\">\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Output::i()->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<br><br>\n\t\t<ul class='ipsList_reset'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\is_string( $input ) ):\n$return .= <<<CONTENT\n\n\t\t\t{$input}\n\t\t\t<hr class='ipsHr'>\n\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t{$input->html($form)}\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t{$input->rowHtml($form)}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsPad\">\n\t\t{$actionButtons[0]} \nCONTENT;\n\nif ( isset( $actionButtons[1] ) ):\n$return .= <<<CONTENT\n{$actionButtons[1]}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reviews( $event ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-controller='core.front.core.commentFeed' \nCONTENT;\n\nif ( \\IPS\\Settings::i()->auto_polling_enabled ):\n$return .= <<<CONTENT\ndata-autoPoll\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-commentsType='reviews' data-baseURL='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $event->isLastPage('reviews') ):\n$return .= <<<CONTENT\ndata-lastPage\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-feedID='event-\nCONTENT;\n$return .= htmlspecialchars( $event->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-reviews' id='reviews'>\n\t\nCONTENT;\n\nif ( $event->reviewForm() ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t<strong class='ipsType_warning'><i class='fa fa-info-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'item_locked_can_review', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div id='elEventReviewForm'>\n\t\t\t{$event->reviewForm()}\n\t\t<\/div>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $event->hasReviewed() ):\n$return .= <<<CONTENT\n\n\t\t\t<!-- Already reviewed -->\n\t\t\nCONTENT;\n\nelseif ( $event->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'item_locked_cannot_review' );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedin()->restrict_post ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->restrict_post == -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'restricted_cannot_comment' );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'restricted_cannot_comment', \\IPS\\Member::loggedIn()->warnings(5,NULL,'rpa'), \\IPS\\Member::loggedIn()->restrict_post );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'unacknowledged_warning_cannot_post', \\IPS\\Member::loggedIn()->warnings( 1, FALSE ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\count( $event->reviews( NULL, NULL, NULL, 'desc', NULL, NULL, NULL, NULL, isset( \\IPS\\Request::i()->showDeleted ) ) ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !$event->hasReviewed() ):\n$return .= <<<CONTENT\n<hr class='ipsHr'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsClearfix ipsSpacer_bottom\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimodHeader( $event, '#reviews', 'review' );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->reviewPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPos_left ipsResponsive_noFloat\">\n\t\t\t\t\t{$event->reviewPagination( array( 'tab', 'sort' ) )}\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsClearfix ipsPos_right ipsResponsive_hidePhone\">\n\t\t\t\t<ul class=\"ipsButtonRow ipsClearfix\">\n\t\t\t\t\t<li data-action=\"tableFilter\">\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( array( 'tab' => 'reviews', 'sort' => 'helpful' ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"\nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->sort ) or \\IPS\\Request::i()->sort != 'newest' ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-action=\"filterClick\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'most_helpful', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li data-action=\"tableFilter\">\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( array( 'tab' => 'reviews','sort' => 'newest' ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"\nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->sort ) and \\IPS\\Request::i()->sort == 'newest' ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-action=\"filterClick\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'newest', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div data-role='commentFeed' data-controller='core.front.core.moderation'>\n\t\t\t<form action=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( 'do', 'multimodReview' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-ipsPageAction data-role='moderationTools'>\n\t\t\t\t\nCONTENT;\n\n$reviewCount=0; $timeLastRead = $event->timeLastRead(); $lined = FALSE;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $event->reviews() as $review ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$lined and $timeLastRead and $timeLastRead->getTimestamp() < $review->mapped('date') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $lined = TRUE and $reviewCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<hr class=\"ipsCommentUnreadSeperator\">\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$reviewCount++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$review->html()}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimod( $event, 'review' );\n$return .= <<<CONTENT\n\n\t\t\t<\/form>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $event->reviewPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div>\n\t\t\t\t{$event->reviewPagination( array( 'tab', 'sort' ) )}\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelseif ( !$event->canReview() ):\n$return .= <<<CONTENT\n\n\t\t<p class=\"ipsType_normal ipsType_light ipsType_reset\" data-role=\"noReviews\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_reviews', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rsvpControls( $event, $attendees ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<!-- Don't use IDs here, this template is called twice in view -->\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id AND ( isset( $attendees[0][ \\IPS\\Member::loggedIn()->member_id ] ) OR isset( $attendees[1][ \\IPS\\Member::loggedIn()->member_id ] ) OR isset( $attendees[2][ \\IPS\\Member::loggedIn()->member_id ] ) ) ):\n$return .= <<<CONTENT\n\n\t<div class='\nCONTENT;\n\nif ( isset( $attendees[1][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\nipsAreaBackground_positive\nCONTENT;\n\nelseif ( isset( $attendees[0][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\nipsAreaBackground_negative\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsAreaBackground_reset\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsPad'>\n\t\t<p class='ipsType_large ipsType_center ipsType_reset'>\n\t\t\t<strong>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $attendees[1][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span><i class='fa fa-check-circle'><\/i> \nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_were_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_are_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelseif ( isset( $attendees[0][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span>\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_werent_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_arent_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$event->hasPassed() OR !\\IPS\\Settings::i()->calendar_block_past_changes ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'confirm_attendance', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rsvp_past_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\t\t<\/p>\n\t\t\nCONTENT;\n\nif ( !$event->hasPassed() OR !\\IPS\\Settings::i()->calendar_block_past_changes ):\n$return .= <<<CONTENT\n\n\t\t<ul class=\"ipsToolList ipsToolList_vertical ipsSpacer_top ipsSpacer_half\">\n\t\t\t\nCONTENT;\n\nif ( isset( $attendees[2][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'yes' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_important ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attend_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'no' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_fullWidth ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notgoing_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nelseif ( isset( $attendees[0][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsType_center'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'leave' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks ipsType_noUnderline ipsFaded'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsType_center'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'leave' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks ipsType_noUnderline ipsFaded'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_leave_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nelseif ( $event->can('rsvp') ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_reset ipsPad'>\n\t\t\nCONTENT;\n\nif ( $event->hasPassed() AND \\IPS\\Settings::i()->calendar_block_past_changes ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsMessage ipsMessage_info'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rsvp_past_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nelseif ( $event->rsvp_limit > 0 AND \\count($attendees[1]) >= $event->rsvp_limit ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsMessage ipsMessage_info'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_limit_reached', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $event->rsvp_limit > 0 ):\n$return .= <<<CONTENT\n<div class='ipsMessage ipsMessage_info'>\nCONTENT;\n\n$sprintf = array($event->rsvp_limit); $pluralize = array( \\count($attendees[1]) ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_limit_info', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/div>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'yes' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_important ipsButton_fullWidth'>\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attended_past_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attend_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<br>\n\t\t\t<div class='ipsGrid'>\n\t\t\t\t\nCONTENT;\n\nif ( $event->rsvp_limit == -1 AND !$event->hasPassed() ):\n$return .= <<<CONTENT\n<div class='ipsGrid_span6'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'maybe' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_fullWidth ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_maybe_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsGrid_span\nCONTENT;\n\nif ( $event->rsvp_limit == -1 AND !$event->hasPassed() ):\n$return .= <<<CONTENT\n6\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n12\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('rsvp')->setQueryString( 'action', 'no' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_fullWidth ipsButton_verySmall'>\nCONTENT;\n\nif ( $event->hasPassed() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notattended_past_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notgoing_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction view( $event, $commentsAndReviews, $attendees, $address=NULL, $reminder=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $club = $event->container()->club() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->clubs and \\IPS\\Settings::i()->clubs_header == 'full' ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"clubs\", \"core\" )->header( $club, $event->container() );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div id='elClubContainer'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<div>\n\t<header class='ipsClearfix ipsSpacer_bottom'>\n\t\t<div id=\"elEventHeader\">{$event->coverPhoto()}<\/div>\n\t\t<div id='elEventHeader_details' class='ipsClearfix ipsAreaBackground ipsPad'>\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsPos_right ipsResponsive_noFloat cEvents_event cEvents_eventSmall cEvents_style\nCONTENT;\n$return .= htmlspecialchars( $event->container()->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<div class=\"ipsPhotoPanel ipsPhotoPanel_tiny ipsPhotoPanel_notPhone ipsClearfix\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $event->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t<div>\n\t\t\t\t\t<p class=\"ipsType_reset ipsType_normal ipsType_blendLinks\">\n\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($event->author()->link( $event->warningRef() )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_created_by', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nif ( $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'front' )->rating( 'large', $event->averageReviewRating(), \\IPS\\Settings::i()->reviews_rating_out_of, $event->memberReviewRating() );\n$return .= <<<CONTENT\n&nbsp;&nbsp; <span class='ipsType_medium ipsType_light'>(\nCONTENT;\n\n$pluralize = array( $event->reviews ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_reviews', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/header>\n\n\t<section>\n\t\t\nCONTENT;\n\nif ( $event->hidden() === 1 and $event->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsMessage ipsMessage_warning ipsSpacer_top\">\n\t\t\t<p class=\"ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t<ul class='ipsList_inline ipsSpacer_top'>\n\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'unhide' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_positive ipsButton_verySmall\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class=\"fa fa-check\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $event->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'delete' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm  title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_delete_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_negative ipsButton_verySmall'><i class='fa fa-times'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->contentItemMessages( $event->getMessages(), $event );\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( $event->rsvp || $address || $event->map( 270, 270 )  ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t\t\t<aside class='ipsColumn ipsColumn_wide'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"view\", \\IPS\\Request::i()->app )->eventSidebar( $event, $attendees, 'Mob', $address );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/aside>\n\t\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsBox ipsPad ipsClearfix'>\n\t\t\t\t\nCONTENT;\n\nif ( $event->recurring ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsClearfix'>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class=\"ipsList_inline ipsPos_right ipsResponsive_noFloat ipsResponsive_hidePhone\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canRemind() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"view\", \"calendar\" )->reminder( $event, $reminder );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->promote( $event );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->follow( 'calendar', 'event', $event->id, $event->followersCount() );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->recurring ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_medium ipsType_light ipsType_reset'><i class='fa fa-repeat'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $event->_recurring_text, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\t\t\t\t<h2 class='ipsType_sectionHead ipsSpacer_bottom'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\n\t\t\t\t\nCONTENT;\n\nif ( \\count( $event->tags() ) OR ( $event->canEdit() AND $event::canTag( NULL, $event->container() ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( $event->tags(), FALSE, FALSE, ( $event->canEdit() AND $event::canTag( NULL, $event->container() ) ) ? $event->url() : NULL );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\t\t\t<div class='ipsComment_content ipsType_medium'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->richText( $event->content(), array('ipsType_normal', 'ipsClear', 'ipsType_break') );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\n\t\t\t\t\nCONTENT;\n\nif ( $event->_album ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class='ipsAreaBackground_light ipsPad_half'>\n\t\t\t\t\t\t<h3 class='ipsType_normal ipsType_reset ipsSpacer_bottom ipsSpacer_half'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_images', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t{$event->_album}\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\n\t\t\t\t<div class='ipsItemControls'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $event, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reputation( $event );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<ul class='ipsToolList ipsToolList_horizontal ipsPos_left ipsClearfix ipsResponsive_noFloat ipsItemControls_left'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( ( $event->canEdit() or $event->canFeature() or $event->canUnfeature() or $event->canHide() or $event->canUnhide() or $event->canMove() or $event->canLock() or $event->canUnlock() or $event->canDelete() ) or ( $event->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#elEventActions_menu' id='elEventActions' class='ipsButton ipsButton_light ipsButton_verySmall ipsButton_fullWidth' data-ipsMenu>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'manage_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t\t<ul id='elEventActions_menu' class='ipsMenu ipsMenu_auto ipsHide'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') AND $event->hidden() == -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'restore' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'restoreAsHidden' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'delete', 'immediate' => 1 ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canEdit() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->setQueryString( array( 'do' => 'edit' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'calendar_edit_details_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'calendar_edit_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canFeature() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'feature' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canUnfeature() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'unfeature' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfeature_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfeature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canHide() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'hide' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canUnhide() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'unhide' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\nif ( $event->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( $event->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canLock() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'lock' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canUnlock() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'unlock' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlock_title_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlock', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canMove() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'move' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"  title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'event_move_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canDelete() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'delete' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm  title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'calendar_delete_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canOnMessage( 'add' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'messageForm' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_message', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_message', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_view_moderation_log') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_sep'><hr><\/li>\n\t\t\t\t\t\t\t\t\t\t\t<li class=\"ipsMenu_item\"><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url()->csrf()->setQueryString( array( 'do' => 'modLog' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_history', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_history', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->canReportOrRevoke() === TRUE ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('report'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size='medium' data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_submit_success', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_link ipsButton_verySmall ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url('download'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' rel=\"noindex nofollow\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'download_ical_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_verySmall ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'download_ical', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->venue() and $event->venue()->can( 'view' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $event->venue()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_link ipsButton_verySmall ipsButton_fullWidth'>\nCONTENT;\n\n$sprintf = array($event->venue()->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'calendar_more_events_at_x', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $event->author()->member_id == \\IPS\\Member::loggedIn()->member_id and \\IPS\\calendar\\Calendar::canOnAny('add') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=calendar&module=calendar&controller=submit&do=copy&event_id={$event->id}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' rel=\"noindex nofollow\" title='' class='ipsButton ipsButton_link ipsButton_verySmall ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_similar_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\n\t\t\t\t<div class=\"ipsResponsive_showPhone ipsResponsive_block\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $event->canRemind() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsSpacer_bottom ipsSpacer_half'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"view\", \"calendar\" )->reminder( $event, $reminder, 'ipsButton_fullWidth' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsSpacer_bottom ipsSpacer_half'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->follow( 'calendar', 'event', $event->id, $event->followersCount() );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='ipsSpacer_bottom ipsSpacer_half'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->promote( $event );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $event->rsvp || $address || $event->map( 270, 270 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( \\count( $event->shareLinks() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsSpacer_both'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->sharelinks( $event );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/section>\n\n\t\nCONTENT;\n\nif ( $commentsAndReviews ):\n$return .= <<<CONTENT\n\n\t\t<br>\n\t\t\nCONTENT;\n\nif ( $event->container()->allow_reviews && $event->container()->allow_comments ):\n$return .= <<<CONTENT\n\n\t\t\t<a id=\"replies\"><\/a>\n\t\t\t<h2 class='ipsHide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_feedback', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t{$commentsAndReviews}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\n\nCONTENT;\n\nif ( $event->container()->club() ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
